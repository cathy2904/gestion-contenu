'use client';
import type { Metadata } from "next"; // eslint-disable-next-line @typescript-eslint/no-unused-vars
// import { usePathname } from "next/navigation";
import localFont from "next/font/local";
import "./globals.css";
import {Provider} from '@/components/ui/provider'
import Nav from "@/components/Nav";
import DashBar from "@/components/DashBar";
import MobileBar from "@/components/MobileBar";
import { AuthProvider } from "./contexts/authProvider";
import Principal from "@/components/Principal"; // eslint-disable-next-line @typescript-eslint/no-unused-vars
import { ChakraProvider } from "@chakra-ui/react"; // eslint-disable-next-line @typescript-eslint/no-unused-vars
import ProtectedRoute from "@/components/ProtectedRoute"; // eslint-disable-next-line @typescript-eslint/no-unused-vars
import { usePathname } from "next/navigation";
// import { usePathname } from "next/navigation";
// import { extendTheme } from "@chakra-ui/theme-tools";




const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };



export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const pathname = usePathname(); // Récupérer le chemin actuel

  // // Conditionner l'affichage des composants seulement si on n'est pas sur les pages de login ou register
  // const isAuthPage = pathname === "/auth/login" || pathname === "/auth/register"; // Vérifie si on est sur login ou register
  const pathname = usePathname();

  // Vérifie si l'URL contient "/auth" et ne pas afficher Nav/DashBar pour ces pages
  if (pathname.startsWith("/auth")) {
    return (
      <html lang="en">
        <body className={`${geistSans.variable} antialiased bg-[#0e0e0e] text-[#ececec]`}>
          <AuthProvider>
            {children}
          </AuthProvider>
        </body>
      </html>
    );
  }

  
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-[#0e0e0e] text-[#ececec]`}
      >
          {/* ChakraProvider avec un thème personnalisé */}
          
        <AuthProvider>
        <Provider>
          
          <MobileBar />
          <Nav /> 
          
          <div className="flex items-start">
            <div>
              <DashBar />
              <MobileBar />
            </div>
            {children}
          </div>
          
          
          
        </Provider>
        </AuthProvider>
        
      </body>
    </html>
  );
}
