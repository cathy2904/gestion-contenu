{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/chart/Chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/chart/Chart.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chart/Chart.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/chart/Chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/chart/Chart.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chart/Chart.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/chart/Line.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/chart/Line.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chart/Line.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/chart/Line.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/chart/Line.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chart/Line.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/DashCard.tsx"],"sourcesContent":["import {  Card, Flex, VStack } from \"@chakra-ui/react\"\r\n// import { Avatar } from \"@/components/ui/avatar\"\r\n// import { IoIosMail } from \"react-icons/io\";\r\nimport { Button } from \"@/components/ui/button\"\r\nimport LineChart, { GraphType } from \"./chart/Line\";\r\n\r\ntype GraphicType = {\r\n  t?: string,\r\n  icon: React.ReactNode,\r\n  title: string,\r\n  percentage: string,\r\n  number: string,\r\n  graph: GraphType\r\n}\r\nexport const DashCard = ({graphic}:{graphic: GraphicType }) => {\r\n  return (\r\n    <Card.Root justifyContent=\"center\" bg=\"#121212\" width=\"230px\" height=\"300px\" rounded=\"md\" borderWidth=\"1px\" borderColor=\"#232424\" flexShrink={0}>\r\n      <Card.Body gap=\"2\">\r\n        <Flex  color=\"white\" spaceX=\"2\">\r\n          <Button p=\"-1\" bg=\"#2c2c2c\">{graphic.icon} </Button>\r\n          <VStack spaceY=\"-1\">\r\n            <span>{graphic.title} </span>\r\n            <span className=\"text-white text-xs\">Derniere mise a jour</span>\r\n          </VStack>\r\n        </Flex>\r\n        {/* <Card.Title mt=\"2\">Nue Camp</Card.Title> */}\r\n        <div>\r\n          <LineChart graph={graphic.graph} />\r\n          \r\n        </div>\r\n        <div className=\"flex -mt-20 justify-around\">\r\n            <Button variant=\"ghost\" color=\"white\" fontWeight=\"bold\">{graphic.number} </Button>\r\n            <Button p={-2} w=\"16\" bg=\"#172e0e\" color=\"#48d80b\" fontWeight=\"bold\" borderRadius=\"2xl\">{graphic.percentage} </Button>\r\n        </div>\r\n      </Card.Body>\r\n      {/* <Card.Footer justifyContent=\"flex-end\">\r\n        <Button variant=\"outline\">View</Button>\r\n        <Button>Join</Button>\r\n      </Card.Footer> */}\r\n    </Card.Root>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA,kDAAkD;AAClD,8CAA8C;AAC9C;AACA;;;;;AAUO,MAAM,WAAW,CAAC,EAAC,OAAO,EAAyB;IACxD,qBACE,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;QAAC,gBAAe;QAAS,IAAG;QAAU,OAAM;QAAQ,QAAO;QAAQ,SAAQ;QAAK,aAAY;QAAM,aAAY;QAAU,YAAY;kBAC5I,cAAA,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;YAAC,KAAI;;8BACb,8OAAC,oLAAA,CAAA,OAAI;oBAAE,OAAM;oBAAQ,QAAO;;sCAC1B,8OAAC,2HAAA,CAAA,SAAM;4BAAC,GAAE;4BAAK,IAAG;;gCAAW,QAAQ,IAAI;gCAAC;;;;;;;sCAC1C,8OAAC,2LAAA,CAAA,SAAM;4BAAC,QAAO;;8CACb,8OAAC;;wCAAM,QAAQ,KAAK;wCAAC;;;;;;;8CACrB,8OAAC;oCAAK,WAAU;8CAAqB;;;;;;;;;;;;;;;;;;8BAIzC,8OAAC;8BACC,cAAA,8OAAC,4HAAA,CAAA,UAAS;wBAAC,OAAO,QAAQ,KAAK;;;;;;;;;;;8BAGjC,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,OAAM;4BAAQ,YAAW;;gCAAQ,QAAQ,MAAM;gCAAC;;;;;;;sCACxE,8OAAC,2HAAA,CAAA,SAAM;4BAAC,GAAG,CAAC;4BAAG,GAAE;4BAAK,IAAG;4BAAU,OAAM;4BAAU,YAAW;4BAAO,cAAa;;gCAAO,QAAQ,UAAU;gCAAC;;;;;;;;;;;;;;;;;;;;;;;;AASxH","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/dashboard/Graph.tsx"],"sourcesContent":["import { Flex } from \"@chakra-ui/react\";\r\nimport { IoIosMail } from \"react-icons/io\";\r\nimport { FaCircleDollarToSlot } from \"react-icons/fa6\";\r\nimport { SlPeople } from \"react-icons/sl\";\r\nimport { IoSwapVertical } from \"react-icons/io5\";\r\nimport { DashCard } from \"../DashCard\";\r\n\r\n\r\nconst graphics = [\r\n    {\r\n        t: \"1/3\",\r\n        icon: <IoIosMail />,\r\n        title: \"Email Envoye\",\r\n        number: \"12 364\",\r\n        percentage: \"5%\",\r\n        graph: {\r\n            data : {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [10, 15, 12, 20, 17, 30],\r\n                    fill: true,\r\n                    borderColor: 'rgba(102,189,152,255)',\r\n                    backgroundColor: 'rgba(22,28,26,255)',\r\n                    tension: 0.1,\r\n                    pointRadius: 0,\r\n                  },\r\n                ],\r\n              },\r\n              \r\n               options : {\r\n                scales: {\r\n                  x: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe X\r\n                    },\r\n                  },\r\n                  y: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe Y\r\n                    },\r\n                  },\r\n                },\r\n                plugins: {\r\n                  legend: {\r\n                    display: false, // Désactiver la légende\r\n                  },\r\n                },\r\n              }\r\n        }\r\n    },\r\n    {\r\n        t: \"1/3\",\r\n        icon: <FaCircleDollarToSlot  />,\r\n        title: \"Ventes obtenues\",\r\n        number: \"98 637\",\r\n        percentage: \"5%\",\r\n        graph: {\r\n            data : {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [10, 7, 20, 21, 10, 30],\r\n                    fill: true,\r\n                    borderColor: 'rgba(102,189,152,255)',\r\n                    backgroundColor: 'rgba(22,28,26,255)',\r\n                    tension: 0.1,\r\n                    pointRadius: 0,\r\n                  },\r\n                ],\r\n              },\r\n              \r\n               options : {\r\n                scales: {\r\n                  x: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe X\r\n                    },\r\n                  },\r\n                  y: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe Y\r\n                    },\r\n                  },\r\n                },\r\n                plugins: {\r\n                  legend: {\r\n                    display: false, // Désactiver la légende\r\n                  },\r\n                },\r\n              }\r\n        }\r\n    },\r\n    {\r\n        t: \"1/3\",\r\n        icon: <SlPeople />,\r\n        title: \"Nouveaux clients\",\r\n        number: \"32 908\",\r\n        percentage: \"5%\",\r\n        graph: {\r\n            data : {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', \"juillet\"],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [30, 10, 15, 10, 25, 20, 29],\r\n                    fill: true,\r\n                    borderColor: 'rgba(102,189,152,255)',\r\n                    backgroundColor: 'rgba(22,28,26,255)',\r\n                    tension: 0.1,\r\n                    pointRadius: 0,\r\n                  },\r\n                ],\r\n              },\r\n              \r\n               options : {\r\n                scales: {\r\n                  x: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe X\r\n                    },\r\n                  },\r\n                  y: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe Y\r\n                    },\r\n                  },\r\n                },\r\n                plugins: {\r\n                  legend: {\r\n                    display: false, // Désactiver la légende\r\n                  },\r\n                },\r\n              }\r\n        }\r\n    },\r\n    {\r\n        t: \"\",\r\n        icon: <IoSwapVertical />,\r\n        title: \"Trafic\",\r\n        number: \"1M\",\r\n        percentage: \"5%\",\r\n        graph: {\r\n            data : {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n                datasets: [\r\n                  {\r\n                    label: '',\r\n                    data: [12, 10, 30, 20, 25, 20],\r\n                    fill: true,\r\n                    borderColor: 'rgba(102,189,152,255)',\r\n                    backgroundColor: 'rgba(22,28,26,255)',\r\n                    tension: 0.1,\r\n                    pointRadius: 0,\r\n                  },\r\n                ],\r\n              },\r\n              \r\n               options : {\r\n                scales: {\r\n                  x: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe X\r\n                    },\r\n                  },\r\n                  y: {\r\n                      grid: {\r\n                          display: false, // Masquer la grille de l'axe X\r\n                        },\r\n                    ticks: {\r\n                      display: false, // Masquer les labels de l'axe Y\r\n                    },\r\n                  },\r\n                },\r\n                plugins: {\r\n                  legend: {\r\n                    display: false, // Désactiver la légende\r\n                  },\r\n                },\r\n              }\r\n        }\r\n    },\r\n]\r\n\r\nexport default function Graph() {\r\n  return (\r\n    <Flex gap=\"2\" overflowX=\"auto\" pl={1} whiteSpace=\"nowrap\" justifyContent={{base:\"start\", md: \"center\"}} >\r\n        {graphics.map((graphic, index)=>(\r\n            <DashCard key={index} graphic={graphic} />\r\n        ))}\r\n    </Flex>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/dashboard/Time.tsx"],"sourcesContent":["import { Box, Button, HStack, List } from \"@chakra-ui/react\";\r\nimport { FaCircle } from \"react-icons/fa\";\r\n\r\nexport default function Time() {\r\n  return (\r\n    <div className=\"p-6 space-y-4\">\r\n        <Box spaceX={4} w={{base: \"full\", md:\"450px\"}} p=\"1\" rounded=\"2xl\" borderWidth=\"2px\" borderColor=\"#232424\">\r\n            <Button w=\"24\" bg=\"#172e0e\" color=\"#48d80b\" rounded=\"2xl\" >Jan. - Avr</Button>\r\n            <Button w=\"24\" variant=\"ghost\" color=\"#48d80b\" _hover={{bg:\"#172e0e\", rounded: \"2xl\"}}>Mai. - Aou. </Button>\r\n            <Button w=\"24\" variant=\"ghost\" color=\"#48d80b\" _hover={{bg:\"#172e0e\", rounded: \"2xl\"}}>  Sept. - Dec.</Button>\r\n        </Box>\r\n        <Box>\r\n            <HStack spaceX={4}>\r\n                <List.Root spaceY={3}>\r\n                    <List.Item>\r\n                        <List.Indicator asChild color=\"#388565\">\r\n                            <FaCircle />\r\n                        </List.Indicator>\r\n                        Email\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Indicator asChild color=\"#286149\">\r\n                            <FaCircle />\r\n                        </List.Indicator>\r\n                        Nouveaux clients\r\n                    </List.Item>\r\n                </List.Root>\r\n                <List.Root spaceY={3}>\r\n                    <List.Item>\r\n                        <List.Indicator asChild color=\"#1e4836\">\r\n                            <FaCircle />\r\n                        </List.Indicator>\r\n                        Ventes\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Indicator asChild color=\"#132e22\">\r\n                            <FaCircle />\r\n                        </List.Indicator>\r\n                        Trafic\r\n                    </List.Item>\r\n                </List.Root>\r\n            </HStack>\r\n        </Box>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACX,8OAAC,kLAAA,CAAA,MAAG;gBAAC,QAAQ;gBAAG,GAAG;oBAAC,MAAM;oBAAQ,IAAG;gBAAO;gBAAG,GAAE;gBAAI,SAAQ;gBAAM,aAAY;gBAAM,aAAY;;kCAC7F,8OAAC,wLAAA,CAAA,SAAM;wBAAC,GAAE;wBAAK,IAAG;wBAAU,OAAM;wBAAU,SAAQ;kCAAO;;;;;;kCAC3D,8OAAC,wLAAA,CAAA,SAAM;wBAAC,GAAE;wBAAK,SAAQ;wBAAQ,OAAM;wBAAU,QAAQ;4BAAC,IAAG;4BAAW,SAAS;wBAAK;kCAAG;;;;;;kCACvF,8OAAC,wLAAA,CAAA,SAAM;wBAAC,GAAE;wBAAK,SAAQ;wBAAQ,OAAM;wBAAU,QAAQ;4BAAC,IAAG;4BAAW,SAAS;wBAAK;kCAAG;;;;;;;;;;;;0BAE3F,8OAAC,kLAAA,CAAA,MAAG;0BACA,cAAA,8OAAC,2LAAA,CAAA,SAAM;oBAAC,QAAQ;;sCACZ,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;4BAAC,QAAQ;;8CACf,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;;sDACN,8OAAC,yNAAA,CAAA,OAAI,CAAC,SAAS;4CAAC,OAAO;4CAAC,OAAM;sDAC1B,cAAA,8OAAC,8IAAA,CAAA,WAAQ;;;;;;;;;;wCACI;;;;;;;8CAGrB,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;;sDACN,8OAAC,yNAAA,CAAA,OAAI,CAAC,SAAS;4CAAC,OAAO;4CAAC,OAAM;sDAC1B,cAAA,8OAAC,8IAAA,CAAA,WAAQ;;;;;;;;;;wCACI;;;;;;;;;;;;;sCAIzB,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;4BAAC,QAAQ;;8CACf,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;;sDACN,8OAAC,yNAAA,CAAA,OAAI,CAAC,SAAS;4CAAC,OAAO;4CAAC,OAAM;sDAC1B,cAAA,8OAAC,8IAAA,CAAA,WAAQ;;;;;;;;;;wCACI;;;;;;;8CAGrB,8OAAC,yNAAA,CAAA,OAAI,CAAC,IAAI;;sDACN,8OAAC,yNAAA,CAAA,OAAI,CAAC,SAAS;4CAAC,OAAO;4CAAC,OAAM;sDAC1B,cAAA,8OAAC,8IAAA,CAAA,WAAQ;;;;;;;;;;wCACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzC","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/components/Principal.tsx"],"sourcesContent":["export default function Principal({titre, children}: {titre:string, children: React.ReactNode}) {\r\n  return (\r\n    <div className=\" w-full md:w-5/6 bg-[#121313] p-3 md:p-6  space-y-4 overflow-hidden h-auto\">\r\n        <h1 className=\"text-3xl font-bold\">{titre} </h1>\r\n        <div className=\"bg-[#121313] h-[90%]\">{children}</div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAAe,SAAS,UAAU,EAAC,KAAK,EAAE,QAAQ,EAA4C;IAC5F,qBACE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;;oBAAsB;oBAAM;;;;;;;0BAC1C,8OAAC;gBAAI,WAAU;0BAAwB;;;;;;;;;;;;AAG/C","debugId":null}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/app/page.tsx"],"sourcesContent":["import BarChart from \"@/components/chart/Chart\";\r\nimport Graph from \"@/components/dashboard/Graph\";\r\nimport Time from \"@/components/dashboard/Time\";\r\nimport Principal from \"@/components/Principal\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Principal titre=\"Dashboard\">\r\n      {/* <h1 className=\"p-4 text-xl\">Dashboard</h1> */}\r\n      <Graph />\r\n      <Time />\r\n      <BarChart />\r\n    </Principal>\r\n  );\r\n}\r\n\r\n// import Posts from './post/page'\r\n// export default function Home() {\r\n//   return (\r\n//         <Posts />\r\n//   )\r\n// }\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC,wHAAA,CAAA,UAAS;QAAC,OAAM;;0BAEf,8OAAC,iIAAA,CAAA,UAAK;;;;;0BACN,8OAAC,gIAAA,CAAA,UAAI;;;;;0BACL,8OAAC,6HAAA,CAAA,UAAQ;;;;;;;;;;;AAGf,EAEA,kCAAkC;CAClC,mCAAmC;CACnC,aAAa;CACb,oBAAoB;CACpB,MAAM;CACN,IAAI","debugId":null}}]
}