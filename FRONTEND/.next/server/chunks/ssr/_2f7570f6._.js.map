{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/content/read/%5Bid%5D/page.tsx"],"sourcesContent":["// app/content/read/[id]/page.tsx\r\nimport { notFound } from 'next/navigation';\r\nimport Image from 'next/image';\r\n\r\nexport default async function ContentReadPage({ params }: { params: { id: string } }) {\r\n  const res = await fetch(`/content/${params.id}`, {\r\n    cache: 'no-store',\r\n  });\r\n\r\n  if (!res.ok) return notFound();\r\n\r\n  const content = await res.json();\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-4\">\r\n      <h1 className=\"text-2xl font-bold\">{content.title}</h1>\r\n      <p className=\"text-gray-700 whitespace-pre-line\">{content.generatedContent}</p>\r\n\r\n      {content.media?.length > 0 && (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mt-6\">\r\n          {content.media.map((url: string, index: number) => (\r\n            <Image\r\n              key={index}\r\n              src={url}\r\n              alt={`Image ${index + 1}`}\r\n              width={500}\r\n              height={300}\r\n              className=\"rounded-lg object-cover\"\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import { useParams } from 'next/navigation';\r\n// import axios from 'axios';\r\n\r\n// export default function ReadContentPage() {\r\n//   const { id } = useParams();\r\n//   const [content, setContent] = useState<{\r\n//     title: string;\r\n//     content: string;\r\n//     publicationDate?: string;\r\n//     statut?: string;\r\n//   } | null>(null);\r\n\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     if (!id) return;\r\n\r\n//     const fetchContent = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:3000/api/content/${id}`);\r\n//         setContent(response.data);\r\n//       } catch (error) {\r\n//         console.error('Erreur lors du chargement du contenu', error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchContent();\r\n//   }, [id]);\r\n\r\n//   if (loading) return <p>Chargement...</p>;\r\n\r\n//   if (!content) return <p>Contenu non trouvé.</p>;\r\n\r\n  \r\n\r\n//   return (\r\n//     <div className=\"max-w-2xl mx-auto p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">{content.title}</h1>\r\n//       <p className=\"text-white-700 whitespace-pre-wrap\">{content.content}</p>\r\n\r\n//       <div className=\"mt-6 text-sm text-white-500\">\r\n//         <p><strong>Statut :</strong> {content.statut || 'non défini'}</p>\r\n//         {content.publicationDate && (\r\n//           <p><strong>Date de publication :</strong> {new Date(content.publicationDate).toLocaleString()}</p>\r\n//         )}\r\n//       </div>\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AACjC;AAAA;AACA;;;;AAEe,eAAe,gBAAgB,EAAE,MAAM,EAA8B;IAClF,MAAM,MAAM,MAAM,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE;QAC/C,OAAO;IACT;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAE3B,MAAM,UAAU,MAAM,IAAI,IAAI;IAE9B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAsB,QAAQ,KAAK;;;;;;0BACjD,8OAAC;gBAAE,WAAU;0BAAqC,QAAQ,gBAAgB;;;;;;YAEzE,QAAQ,KAAK,EAAE,SAAS,mBACvB,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,KAAa,sBAC/B,8OAAC,6HAAA,CAAA,UAAK;wBAEJ,KAAK;wBACL,KAAK,CAAC,MAAM,EAAE,QAAQ,GAAG;wBACzB,OAAO;wBACP,QAAQ;wBACR,WAAU;uBALL;;;;;;;;;;;;;;;;AAYnB,EAIA,gBAAgB;CAEhB,+CAA+C;CAC/C,+CAA+C;CAC/C,6BAA6B;CAE7B,8CAA8C;CAC9C,gCAAgC;CAChC,6CAA6C;CAC7C,qBAAqB;CACrB,uBAAuB;CACvB,gCAAgC;CAChC,uBAAuB;CACvB,qBAAqB;CAErB,kDAAkD;CAElD,sBAAsB;CACtB,uBAAuB;CAEvB,yCAAyC;CACzC,cAAc;CACd,uFAAuF;CACvF,qCAAqC;CACrC,0BAA0B;CAC1B,wEAAwE;CACxE,oBAAoB;CACpB,6BAA6B;CAC7B,UAAU;CACV,SAAS;CAET,sBAAsB;CACtB,cAAc;CAEd,8CAA8C;CAE9C,qDAAqD;CAIrD,aAAa;CACb,8CAA8C;CAC9C,qEAAqE;CACrE,gFAAgF;CAEhF,sDAAsD;CACtD,4EAA4E;CAC5E,wCAAwC;CACxC,+GAA+G;CAC/G,aAAa;CACb,eAAe;CAEf,aAAa;CACb,OAAO;CACP,IAAI","debugId":null}}]
}