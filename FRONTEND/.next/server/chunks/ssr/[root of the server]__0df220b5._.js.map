{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/contexts/authProvider.tsx"],"sourcesContent":["'use client';\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { setCookie, deleteCookie } from 'cookies-next';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:3003/api/users/profile', {\r\n          credentials: 'include'\r\n        });\r\n        if (res.ok) setUser(await res.json());\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const res = await fetch('http://localhost:3003/api/auth/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({  email: email.trim(),\r\n        password: password  }),\r\n      credentials: 'include'\r\n    });\r\n    if (!res.ok) throw new Error('Login failed');\r\n    setUser(await res.json());\r\n    router.push('/dashboard');\r\n    const data = await res.json();\r\n  console.log('Login response:', data); // Vérifiez la structure\r\n  setUser({\r\n    id: data.user.id,\r\n    username: data.user.username, \r\n    email: data.user.email\r\n  });\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    const res = await fetch('http://localhost:3003/api/auth/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, email, password }),\r\n      credentials: 'include'\r\n    });\r\n    if (!res.ok) throw new Error('Registration failed');\r\n    await login(email, password);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch('http://localhost:3003/api/auth/logout', { \r\n      method: 'POST',\r\n      credentials: 'include'\r\n    });\r\n    deleteCookie('token');\r\n    setUser(null);\r\n    router.push('/auth/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth doit être utilisé à l\\intérieur de AuthProvider');\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAHA;;;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA0B;AAEnD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,2CAA2C;oBACjE,aAAa;gBACf;gBACA,IAAI,IAAI,EAAE,EAAE,QAAQ,MAAM,IAAI,IAAI;YACpC,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,MAAM,MAAM,MAAM,MAAM,wCAAwC;YAC9D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAG,OAAO,MAAM,IAAI;gBACvC,UAAU;YAAU;YACtB,aAAa;QACf;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,QAAQ,MAAM,IAAI,IAAI;QACtB,OAAO,IAAI,CAAC;QACZ,MAAM,OAAO,MAAM,IAAI,IAAI;QAC7B,QAAQ,GAAG,CAAC,mBAAmB,OAAO,wBAAwB;QAC9D,QAAQ;YACN,IAAI,KAAK,IAAI,CAAC,EAAE;YAChB,UAAU,KAAK,IAAI,CAAC,QAAQ;YAC5B,OAAO,KAAK,IAAI,CAAC,KAAK;QACxB;IACA;IAEA,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,MAAM,MAAM,MAAM,MAAM,2CAA2C;YACjE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;gBAAO;YAAS;YACjD,aAAa;QACf;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,MAAM,OAAO;IACrB;IAEA,MAAM,SAAS;QACb,MAAM,MAAM,yCAAyC;YACnD,QAAQ;YACR,aAAa;QACf;QACA,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE;QACb,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;YAAU;QAAO;kBACnE;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/auth/login/page.tsx"],"sourcesContent":["'use client';\r\nimport { useAuth } from '../../contexts/authProvider';\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { login, loading } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await login(email, password);\r\n    } catch (err) {\r\n      setError('Email ou mot de passe incorrect');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h1>Connexion</h1>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Mot de passe\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Connexion...' : 'Se connecter'}\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Pas de compte ? <Link href=\"/auth/register\">S'inscrire</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD;IACjC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,MAAM,OAAO;QACrB,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAG;;;;;;YACH,uBAAS,8OAAC;gBAAE,WAAU;0BAAS;;;;;;0BAChC,8OAAC;gBAAK,UAAU;;kCACd,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,aAAY;wBACZ,QAAQ;;;;;;kCAEV,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,aAAY;wBACZ,QAAQ;;;;;;kCAEV,8OAAC;wBAAO,MAAK;wBAAS,UAAU;kCAC7B,UAAU,iBAAiB;;;;;;;;;;;;0BAGhC,8OAAC;;oBAAE;kCACe,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAiB;;;;;;;;;;;;;;;;;;AAIpD","debugId":null}}]
}