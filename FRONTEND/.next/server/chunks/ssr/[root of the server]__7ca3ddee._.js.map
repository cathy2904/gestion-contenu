{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/connect/page.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// type Account = { displayName: string };\r\n// type Social = { facebook?: Account; instagram?: Account; linkedin?: Account };\r\n\r\n// export default function ConnectSocialPage() {\r\n//   const [social, setSocial] = useState<Social>({});\r\n\r\n//   const fetchSocial = async () => {\r\n//     const res = await axios.get('/social/me', { withCredentials: true });\r\n//     setSocial(res.data.socialAccounts || {});\r\n//   };\r\n\r\n//   const connect = (provider: string) => (window.location.href = `/auth/${provider}`);\r\n//   const disconnect = async (provider: string) => {\r\n//     await axios.delete(`/social/${provider}`, { withCredentials: true });\r\n//     fetchSocial();\r\n//   };\r\n\r\n//   useEffect(() => { fetchSocial(); }, []);\r\n\r\n//   return (\r\n//     <div className=\"p-6 space-y-4 max-w-md mx-auto\">\r\n//       <h2 className=\"text-xl font-bold\">GÃ©rer mes connexions</h2>\r\n//       {['facebook', 'instagram', 'linkedin'].map((prov) => (\r\n//         <div key={prov} className=\"flex justify-between items-center border p-4 rounded\">\r\n//           <span className=\"capitalize\">{prov}</span>\r\n//           {social[prov] ? (\r\n//             <>\r\n//               <span>ConnectÃ© ({social[prov]?.displayName})</span>\r\n//               <button className=\"text-red-500\" onClick={() => disconnect(prov)}>DÃ©connecter</button>\r\n//             </>\r\n//           ) : (\r\n//             <button className=\"bg-blue-600 text-white px-3 py-1 rounded\" onClick={() => connect(prov)}>Connecter</button>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\ntype SocialStatus = {\r\n  facebook: boolean\r\n  instagram: boolean\r\n  linkedin: boolean\r\n}\r\n\r\nexport default function ConnectSocial() {\r\n  const [status, setStatus] = useState<SocialStatus>({\r\n    facebook: false,\r\n    instagram: false,\r\n    linkedin: false,\r\n  })\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/social-status').then((res) => {\r\n      setStatus(res.data)\r\n      setLoading(false)\r\n    }).catch(() => setLoading(false))\r\n  }, [])\r\n\r\n  const handlePost = async (platform: keyof SocialStatus) => {\r\n    try {\r\n      const res = await axios.post(`/api/publish/${platform}`, {\r\n        message: 'ðŸŽ‰ Mon premier post avec OAuth et GPT !',\r\n      })\r\n      alert(res.data.message)\r\n    } catch (err) {\r\n      alert('Erreur lors de la publication.')\r\n    }\r\n  }\r\n\r\n  if (loading) return <p>Chargement...</p>\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 border rounded\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Connexion aux RÃ©seaux Sociaux</h1>\r\n\r\n      {['facebook', 'instagram', 'linkedin'].map((platform) => {\r\n        const isConnected = status[platform as keyof SocialStatus]\r\n        return (\r\n          <div key={platform} className=\"mb-6\">\r\n            <h2 className=\"text-lg capitalize\">{platform}</h2>\r\n            {isConnected ? (\r\n              <>\r\n                <p className=\"text-green-600\">âœ… ConnectÃ©</p>\r\n                <button\r\n                  className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded\"\r\n                  onClick={() => handlePost(platform as keyof SocialStatus)}\r\n                >\r\n                  Publier un message\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <a\r\n                href={`/auth/${platform}`}\r\n                className=\"inline-block mt-2 bg-gray-700 text-white px-4 py-2 rounded\"\r\n              >\r\n                Se connecter\r\n              </a>\r\n            )}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,+CAA+C;AAC/C,6BAA6B;AAE7B,0CAA0C;AAC1C,iFAAiF;AAEjF,gDAAgD;AAChD,sDAAsD;AAEtD,sCAAsC;AACtC,4EAA4E;AAC5E,gDAAgD;AAChD,OAAO;AAEP,wFAAwF;AACxF,qDAAqD;AACrD,4EAA4E;AAC5E,qBAAqB;AACrB,OAAO;AAEP,6CAA6C;AAE7C,aAAa;AACb,uDAAuD;AACvD,oEAAoE;AACpE,+DAA+D;AAC/D,4FAA4F;AAC5F,uDAAuD;AACvD,8BAA8B;AAC9B,iBAAiB;AACjB,oEAAoE;AACpE,uGAAuG;AACvG,kBAAkB;AAClB,kBAAkB;AAClB,4HAA4H;AAC5H,eAAe;AACf,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,IAAI;;;;;AAKJ;AACA;AAHA;;;;AAWe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;QACjD,UAAU;QACV,WAAW;QACX,UAAU;IACZ;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,sBAAsB,IAAI,CAAC,CAAC;YACpC,UAAU,IAAI,IAAI;YAClB,WAAW;QACb,GAAG,KAAK,CAAC,IAAM,WAAW;IAC5B,GAAG,EAAE;IAEL,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,UAAU,EAAE;gBACvD,SAAS;YACX;YACA,MAAM,IAAI,IAAI,CAAC,OAAO;QACxB,EAAE,OAAO,KAAK;YACZ,MAAM;QACR;IACF;IAEA,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IAEvB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;YAEvC;gBAAC;gBAAY;gBAAa;aAAW,CAAC,GAAG,CAAC,CAAC;gBAC1C,MAAM,cAAc,MAAM,CAAC,SAA+B;gBAC1D,qBACE,8OAAC;oBAAmB,WAAU;;sCAC5B,8OAAC;4BAAG,WAAU;sCAAsB;;;;;;wBACnC,4BACC;;8CACE,8OAAC;oCAAE,WAAU;8CAAiB;;;;;;8CAC9B,8OAAC;oCACC,WAAU;oCACV,SAAS,IAAM,WAAW;8CAC3B;;;;;;;yDAKH,8OAAC;4BACC,MAAM,CAAC,MAAM,EAAE,UAAU;4BACzB,WAAU;sCACX;;;;;;;mBAhBK;;;;;YAsBd;;;;;;;AAGN","debugId":null}}]
}