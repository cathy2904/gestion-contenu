{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/components/EditPostForm.tsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\n\r\ninterface EditPostFormProps {\r\n  onSubmit: (data: FormData) => void;\r\n  initialData: {\r\n    title: string;\r\n    content: string;\r\n    author: string;\r\n    imagePath?: string;\r\n  };\r\n  isSubmitting?: boolean;\r\n}\r\n\r\nexport default function EditPostForm({ onSubmit, initialData, isSubmitting = false }: EditPostFormProps) {\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: { ...initialData, image: null },\r\n  });\r\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n\r\n  const handleFormSubmit = async (data: any) => {\r\n    const formData = new FormData();\r\n    formData.append('title', data.title);\r\n    formData.append('content', data.content);\r\n    formData.append('author', data.author);\r\n\r\n    if (data.image && data.image[0]) {\r\n      // Append the new image if it exists\r\n      formData.append('image', data.image[0]);\r\n    } else if (initialData.imagePath) {\r\n      // Retain the existing image path if no new image is uploaded\r\n      formData.append('imagePath', initialData.imagePath);\r\n    }\r\n\r\n    onSubmit(formData);\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewImage(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-4 max-w-2xl mx-auto\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Titre *</label>\r\n        <input\r\n          {...register('title', { required: 'Le titre est requis' })}\r\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n            errors.title ? 'border-red-500' : 'border'\r\n          } p-2`}\r\n        />\r\n        {errors.title && (\r\n          <p className=\"mt-1 text-sm text-red-600\">{errors.title.message as string}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Contenu *</label>\r\n        <textarea\r\n          {...register('content', { required: 'Le contenu est requis' })}\r\n          rows={4}\r\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n            errors.content ? 'border-red-500' : 'border'\r\n          } p-2`}\r\n        />\r\n        {errors.content && (\r\n          <p className=\"mt-1 text-sm text-red-600\">{errors.content.message as string}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Auteur *</label>\r\n        <input\r\n          {...register('author', { required: \"L'auteur est requis\" })}\r\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n            errors.author ? 'border-red-500' : 'border'\r\n          } p-2`}\r\n        />\r\n        {errors.author && (\r\n          <p className=\"mt-1 text-sm text-red-600\">{errors.author.message as string}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Image</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          {...register('image')}\r\n          accept=\"image/*\"\r\n          onChange={handleImageChange}\r\n          className=\"mt-1 block w-full text-sm text-gray-500\r\n            file:mr-4 file:py-2 file:px-4\r\n            file:rounded-md file:border-0\r\n            file:text-sm file:font-semibold\r\n            file:bg-blue-50 file:text-blue-700\r\n            hover:file:bg-blue-100\"\r\n        />\r\n        {previewImage ? (\r\n          <div className=\"mt-2\">\r\n            <img \r\n              src={previewImage} \r\n              alt=\"Preview\" \r\n              className=\"h-32 object-cover rounded\"\r\n            />\r\n          </div>\r\n        ) : initialData?.imagePath ? (\r\n          <div className=\"mt-2\">\r\n            <img \r\n              src={`http://localhost:3003${initialData.imagePath}`} \r\n              alt=\"Current\" \r\n              className=\"h-32 object-cover rounded\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\r\n        >\r\n          {isSubmitting ? 'Modification...' : 'Modifier'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n// interface EditPostFormProps {\r\n//   post: any;\r\n// }\r\n\r\n// export default function EditPostForm({ post }: EditPostFormProps) {\r\n//   const router = useRouter();\r\n//   const [title, setTitle] = useState(post.title);\r\n//   const [content, setContent] = useState(post.content);\r\n//   const [image, setImage] = useState<File | null>(null);\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"title\", title);\r\n//     formData.append(\"content\", content);\r\n//     if (image) formData.append(\"image\", image);\r\n\r\n//     const response = await fetch(`http://localhost:3003/api/posts/${post._id}`, {\r\n//       method: \"PATCH\",\r\n//       body: formData,\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       router.push(\"/posts\");\r\n//     } else {\r\n//       console.error(\"Ã‰chec de la modification\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} className=\"flex flex-col gap-4 max-w-xl mx-auto\">\r\n//       <h2 className=\"text-xl font-semibold\">Modifier un article</h2>\r\n\r\n//       <input\r\n//         type=\"text\"\r\n//         value={title}\r\n//         onChange={(e) => setTitle(e.target.value)}\r\n//         placeholder=\"Titre\"\r\n//         className=\"border p-2 rounded\"\r\n//       />\r\n\r\n//       <textarea\r\n//         value={content}\r\n//         onChange={(e) => setContent(e.target.value)}\r\n//         placeholder=\"Contenu\"\r\n//         className=\"border p-2 rounded\"\r\n//       />\r\n\r\n//       <input\r\n//         type=\"file\"\r\n//         accept=\"image/*\"\r\n//         onChange={(e) => setImage(e.target.files?.[0] || null)}\r\n//         className=\"border p-2 rounded\"\r\n//       />\r\n\r\n//       <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded\">\r\n//         Enregistrer les modifications\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n// import { useForm } from 'react-hook-form';\r\n// import { useState } from 'react';\r\n\r\n// interface EditPostFormProps {\r\n//   onSubmit: (data: FormData) => void;\r\n//   initialData: {\r\n//     title: string;\r\n//     content: string;\r\n//     author: string;\r\n//     imagePath?: string;\r\n//   };\r\n//   isSubmitting?: boolean;\r\n// }\r\n\r\n// export default function EditPostForm({ onSubmit, initialData, isSubmitting = false }: EditPostFormProps) {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm({\r\n//     defaultValues: { ...initialData, image: null },\r\n//   });\r\n//   const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n\r\n//   const handleFormSubmit = async (data: any) => {\r\n//     const formData = new FormData();\r\n//     formData.append('title', data.title);\r\n//     formData.append('content', data.content);\r\n//     formData.append('author', data.author);\r\n\r\n//     if (data.image && data.image[0]) {\r\n//       // Append the new image if it exists\r\n//       formData.append('image', data.image[0]);\r\n//     } else if (initialData.imagePath) {\r\n//       // Retain the existing image path if no new image is uploaded\r\n//       formData.append('imagePath', initialData.imagePath);\r\n//     }\r\n\r\n//     onSubmit(formData);\r\n//   };\r\n\r\n//   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const file = e.target.files?.[0];\r\n//     if (file) {\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         setPreviewImage(reader.result as string);\r\n//       };\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-4 max-w-2xl mx-auto\">\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Titre *</label>\r\n//         <input\r\n//           {...register('title', { required: 'Le titre est requis' })}\r\n//           className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n//             errors.title ? 'border-red-500' : 'border'\r\n//           } p-2`}\r\n//         />\r\n//         {errors.title && (\r\n//           <p className=\"mt-1 text-sm text-red-600\">{errors.title.message as string}</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Contenu *</label>\r\n//         <textarea\r\n//           {...register('content', { required: 'Le contenu est requis' })}\r\n//           rows={4}\r\n//           className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n//             errors.content ? 'border-red-500' : 'border'\r\n//           } p-2`}\r\n//         />\r\n//         {errors.content && (\r\n//           <p className=\"mt-1 text-sm text-red-600\">{errors.content.message as string}</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Auteur *</label>\r\n//         <input\r\n//           {...register('author', { required: \"L'auteur est requis\" })}\r\n//           className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n//             errors.author ? 'border-red-500' : 'border'\r\n//           } p-2`}\r\n//         />\r\n//         {errors.author && (\r\n//           <p className=\"mt-1 text-sm text-red-600\">{errors.author.message as string}</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Image</label>\r\n//         <input\r\n//           type=\"file\"\r\n//           id=\"image\"\r\n//           {...register('image')}\r\n//           accept=\"image/*\"\r\n//           onChange={handleImageChange}\r\n//           className=\"mt-1 block w-full text-sm text-gray-500\r\n//             file:mr-4 file:py-2 file:px-4\r\n//             file:rounded-md file:border-0\r\n//             file:text-sm file:font-semibold\r\n//             file:bg-blue-50 file:text-blue-700\r\n//             hover:file:bg-blue-100\"\r\n//         />\r\n//         {previewImage ? (\r\n//           <div className=\"mt-2\">\r\n//             <img \r\n//               src={previewImage} \r\n//               alt=\"Preview\" \r\n//               className=\"h-32 object-cover rounded\"\r\n//             />\r\n//           </div>\r\n//         ) : initialData?.imagePath ? (\r\n//           <div className=\"mt-2\">\r\n//             <img \r\n//               src={`http://localhost:3003${initialData.imagePath}`} \r\n//               alt=\"Current\" \r\n//               className=\"h-32 object-cover rounded\"\r\n//             />\r\n//           </div>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <div className=\"pt-4\">\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\r\n//         >\r\n//           {isSubmitting ? 'Modification...' : 'Modifier'}\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/post/edit/%5Bid%5D/page.tsx"],"sourcesContent":["import EditPostForm from \"../../../components/EditPostForm\";\n\n\nasync function getPost(id: string) {\n  const res = await fetch(`http://localhost:3003/api/posts/${id}`, {\n    cache: \"no-store\",\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Erreur lors de la rÃ©cupÃ©ration du post\");\n  }\n\n  return res.json();\n}\n\nexport default async function EditPostPage({ params }: { params: { id: string } }) {\n  const post = await getPost(params.id);\n\n  return <EditPostForm post={post} />;\n}\n\n\n\n// 'use client';\n\n// import { useRouter, useParams } from 'next/navigation';\n// import { useState, useEffect } from 'react';\n// import { getPost, updatePost } from '../../service/api';\n// import EditPostForm from '@/app/components/EditPostForm';\n// import Link from 'next/link';\n\n// export default function EditPostPage() {\n//   const router = useRouter();\n//   const { id } = useParams();\n//   const postId = Array.isArray(id) ? id[0] : id;\n//   const [post, setPost] = useState<any>(null);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [error, setError] = useState<string | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const fetchPost = async () => {\n//     if (!postId) return;\n//     try {\n//       setIsLoading(true);\n//       const response = await getPost(postId);\n//       setPost(response.data);\n//     } catch (err) {\n//       setError('Erreur lors du chargement du post');\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const onSubmit = async (formData: FormData) => {\n//     try {\n//       setIsSubmitting(true);\n//       setError(null);\n//       await updatePost(id as string, formData);\n//       router.push('/post');\n//     } catch (err) {\n//       setError('Erreur lors de la mise Ã  jour du post');\n//       console.error(err);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPost();\n//   }, [id]);\n\n//   if (isLoading) {\n//     return (\n//       <div className=\"flex justify-center items-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n//         <strong className=\"font-bold\">Erreur ! </strong>\n//         <span className=\"block sm:inline\">{error}</span>\n//       </div>\n//     );\n//   }\n\n//   if (!post) {\n//     return (\n//       <div className=\"bg-white p-8 rounded-lg shadow text-center\">\n//         <p className=\"text-gray-500\">Post non trouvÃ©</p>\n//         <Link \n//           href=\"/posts\"\n//           className=\"inline-block mt-4 text-blue-600 hover:text-blue-800\"\n//         >\n//           Retour Ã  la liste\n//         </Link>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"container mx-auto px-4 py-8\">\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-800\">Modifier le Post</h1>\n//         <p className=\"text-gray-600 mt-2\">Modifiez les champs nÃ©cessaires</p>\n//       </div>\n\n//       {error && (\n//         <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\n//           {error}\n//         </div>\n//       )}\n\n//       <EditPostForm onSubmit={onSubmit} initialData={post} isSubmitting={isSubmitting} />\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import { useRouter } from 'next/router';\n// import { useState, useEffect } from 'react';\n// import { getPost, updatePost } from '../../service/api';\n// import PostForm from '@/app/components/PostForm';\n\n// export default function EditPostPage() {\n//   const router = useRouter();\n//   const { id } = router.query;\n//   const [post, setPost] = useState<any>(null);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [error, setError] = useState<string | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const fetchPost = async () => {\n//     if (!id) return;\n//     try {\n//       setIsLoading(true);\n//       const response = await getPost(id as string);\n//       setPost(response.data);\n//     } catch (err) {\n//       setError('Erreur lors du chargement du post');\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const onSubmit = async (data: any) => {\n//     try {\n//       setIsSubmitting(true);\n//       setError(null);\n//       await updatePost(id as string, data);\n//       router.push('/posts');\n//     } catch (err) {\n//       setError('Erreur lors de la mise Ã  jour du post');\n//       console.error(err);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPost();\n//   }, [id]);\n\n//   if (isLoading) return <div className=\"text-center py-8\">Chargement...</div>;\n//   if (error) return <div className=\"text-center py-8 text-red-500\">{error}</div>;\n//   if (!post) return <div className=\"text-center py-8\">Post non trouvÃ©</div>;\n\n//   return (\n//     <div className=\"container mx-auto px-4 py-8\">\n//       <div className=\"flex items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold\">Modifier le Post</h1>\n//       </div>\n\n//       {error && (\n//         <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n//           {error}\n//         </div>\n//       )}\n\n//       <PostForm onSubmit={onSubmit} initialData={post} isSubmitting={isSubmitting} />\n//     </div>\n//   );\n// }\n// \"use client\"\n// import React, {useState,useEffect } from 'react'\n// import { useRouter } from 'next/navigation'\n// import { fetcher } from '@/app/libs'\n// import useSWR from 'swr'\n// export default function PostEdit({params} :{params:{id:number}}) {\n//   const router = useRouter()\n//   const {data : post,isLoading, error} = useSWR(`/api/posts/${params.id}`,fetcher)\n//   const [title, setTitle] =useState<string>('');\n//   const [body, setBody] = useState<string>('');\n//   useEffect(()=>{\n//      if(post){\n//          setTitle(post.result.title)\n//          setBody(post.result.content)\n//      }\n//   },[post, isLoading])\n//   const updatePost = async (e: any) => {\n//     e.preventDefault()\n//     if (title!=\"\" && body!=\"\") {\n//       const formData = {\n//           title: title,\n//           content: body\n//       }\n//       const res = await fetch(`/api/posts/${params.id}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n//       const content = await res.json();\n//       if(content.success>0)\n//       {\n//         router.push('/post');\n//       }\n      \n//     }\n//   };\n//   if(isLoading) return <div><span>Loading...</span></div>\n//   if (!post) return null;\n//   return (\n//     <form className='w-full' onSubmit={updatePost}>\n//         <span className='font-bold text-yellow-500 py-2 block underline text-2xl'>Form Add</span>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Title</label>\n//              <input type='text' name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' value={title} onChange={(e:any)=>setTitle(e.target.value)}/>\n//         </div>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Content</label>\n//              <textarea name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' value={body} onChange={(e:any)=>setBody(e.target.value)} />\n//         </div>\n//         <div className='w-full py-2'>\n//           <button className=\"w-20 p-2 text-white border-gray-200 border-[1px] rounded-sm bg-green-400\">Submit</button>\n//         </div>\n//     </form>\n//   )\n// }\n"],"names":[],"mappings":"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","debugId":null}}]
}