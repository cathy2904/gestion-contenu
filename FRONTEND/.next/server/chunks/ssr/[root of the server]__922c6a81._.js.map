{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/generate-image/create/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface GeneratedImage {\r\n  _id: string;\r\n  url: string;\r\n  style: string;\r\n  prompt: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport default function ImageGeneratorPage() {\r\n  const [images, setImages] = useState<GeneratedImage[]>([]);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [style, setStyle] = useState('digital painting');\r\n  const [format, setFormat] = useState<'png' | 'jpg' | 'jpeg'>('png');\r\n  const [size, setSize] = useState('1024x1024');\r\n  const [n, setN] = useState(1);\r\n  //const [images, setImages] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const generateImage = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:3003/api/images/generate', {\r\n        prompt,\r\n        style,\r\n        format,\r\n        size,\r\n        n,\r\n        // userId: '1234',\r\n      });\r\n      setImages(res.data);\r\n    } catch (error) {\r\n      console.error('Erreur de génération :', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Générateur d'image avec GPT</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Titre / Prompt\"\r\n        value={prompt}\r\n        onChange={(e) => setPrompt(e.target.value)}\r\n        className=\"border px-4 py-2 mb-4 w-full\"\r\n      />\r\n      <select\r\n        value={style}\r\n        onChange={(e) => setStyle(e.target.value)}\r\n        className=\"border px-4 py-2 mb-4 w-full\"\r\n      >\r\n        <option value=\"digital painting\">Digital Painting</option>\r\n        <option value=\"photorealistic\">Photorealistic</option>\r\n        <option value=\"cartoon\">Cartoon</option>\r\n        <option value=\"fantasy art\">Fantasy Art</option>\r\n      </select>\r\n      <select\r\n        value={size}\r\n        onChange={(e) => setSize(e.target.value)}\r\n        className=\"border px-4 py-2 mb-4 w-full\"\r\n      >\r\n        <option value=\"512x512\">512x512</option>\r\n        <option value=\"1024x1024\">1024x1024</option>\r\n        <option value=\"1792x1024\">1792x1024</option>\r\n        <option value=\"1024x1792\">1024x1792</option>\r\n      </select>\r\n      <select\r\n        value={format}\r\n        onChange={(e) => setFormat(e.target.value as any)}\r\n        className=\"border px-4 py-2 mb-4 w-full\"\r\n      >\r\n        <option value=\"png\">PNG</option>\r\n        <option value=\"jpg\">JPG</option>\r\n        <option value=\"jpeg\">JPEG</option>\r\n      </select>\r\n      <input\r\n        type=\"number\"\r\n        min={1}\r\n        max={5}\r\n        value={n}\r\n        onChange={(e) => setN(parseInt(e.target.value))}\r\n        className=\"border px-4 py-2 mb-4 w-full\"\r\n      />\r\n      <button\r\n        onClick={generateImage}\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Chargement...' : 'Générer'}\r\n      </button>\r\n\r\n      {images.length > 0 && (\r\n        <div className=\"mt-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n          {images.map((img, i) => (\r\n            <div key={i} className=\"border p-2 rounded\">\r\n              <img src={img.url} alt={img.prompt} className=\"w-full rounded\" />\r\n              <a\r\n                href={img.url}\r\n                download={`image_${i}.${format}`}\r\n                className=\"mt-2 block text-blue-500 underline text-sm\"\r\n              >\r\n                Télécharger\r\n              </a>\r\n              <p className=\"text-xs mt-1 text-gray-600\">{img.prompt} ({img.style})</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useState } from 'react';\r\n// import RequireAuth from '@/components/RequireAuth';\r\n\r\n// export default function GenerateImagePage() {\r\n//   const [prompt, setPrompt] = useState('');\r\n//   const [style, setStyle] = useState('');\r\n//   const [provider, setProvider] = useState<'openai' | 'deepseek'>('openai');\r\n//   const [size, setSize] = useState('512x512');\r\n//   const [n, setN] = useState(1);\r\n//   const [images, setImages] = useState<string[]>([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const [isSaved, setIsSaved] = useState(false);\r\n\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError('');\r\n//     setImages([]);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:3003/api/images/generate', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           prompt,\r\n//           style,\r\n//           provider,\r\n//           size,\r\n//           n,\r\n//           // userId, // Remplace par un vrai userId si besoin\r\n//         }),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Erreur lors de la génération des images');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       const urls = data.map((img: any) => img.url);\r\n//       setImages(urls);\r\n//     } catch (err: any) {\r\n//       setError(err.message || 'Erreur inconnue');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n//   const handleSave = async () => {\r\n//   if (images.length === 0) return;\r\n\r\n//   try {\r\n//     const response = await fetch('http://localhost:3003/api/images/save', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         prompt,\r\n//         style,\r\n//         provider,\r\n//         size,\r\n//         n,\r\n//         // userId, // Remplace par l'user ID réel\r\n//         url: images, // envoyer les URLs générées\r\n//       }),\r\n//     });\r\n\r\n//     if (!response.ok) throw new Error('Erreur lors de l’enregistrement');\r\n\r\n//     setIsSaved(true);\r\n//   } catch (err: any) {\r\n//     console.error(err);\r\n//     setError(err.message || 'Erreur lors de l’enregistrement');\r\n//   }\r\n// };\r\n\r\n// const handleCancel = () => {\r\n//   setPrompt('');\r\n//   setStyle('');\r\n//   setImages([]);\r\n//   setError('');\r\n//   setIsSaved(false);\r\n// };\r\n\r\n\r\n//   return (\r\n//      <RequireAuth>\r\n//     <div className=\"max-w-3xl mx-auto py-10 px-4\">\r\n//       <h1 className=\"text-3xl font-bold mb-6\">Générateur d’Images IA</h1>\r\n\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4 mb-8\">\r\n//         <div>\r\n//           <label className=\"block font-semibold\">Prompt</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"w-full border p-2 rounded\"\r\n//             value={prompt}\r\n//             onChange={(e) => setPrompt(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-semibold\">Style (optionnel)</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"w-full border p-2 rounded\"\r\n//             value={style}\r\n//             onChange={(e) => setStyle(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-semibold\">Fournisseur</label>\r\n//           <select\r\n//             className=\"w-full border p-2 rounded\"\r\n//             value={provider}\r\n//             onChange={(e) => setProvider(e.target.value as 'openai' | 'deepseek')}\r\n//           >\r\n//             <option value=\"openai\">OpenAI</option>\r\n//             <option value=\"deepseek\">DeepSeek</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-semibold\">Taille</label>\r\n//           <select\r\n//             className=\"w-full border p-2 rounded\"\r\n//             value={size}\r\n//             onChange={(e) => setSize(e.target.value)}\r\n//           >\r\n//             <option value=\"256x256\">256x256</option>\r\n//             <option value=\"512x512\">512x512</option>\r\n//             <option value=\"1024x1024\">1024x1024</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-semibold\">Nombre d’images</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"w-full border p-2 rounded\"\r\n//             value={n}\r\n//             onChange={(e) => setN(parseInt(e.target.value))}\r\n//             min={1}\r\n//             max={10}\r\n//           />\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={loading}\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n//         >\r\n//           {loading ? 'Génération...' : 'Générer'}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {error && <p className=\"text-red-600\">{error}</p>}\r\n\r\n//       <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n//         {images.map((url, index) => (\r\n//           <img\r\n//             key={index}\r\n//             src={url}\r\n//             alt={`Generated ${index}`}\r\n//             className=\"rounded shadow\"\r\n//           />\r\n//         ))}\r\n//         {images.length > 0 && !isSaved && (\r\n//   <div className=\"mt-6 flex gap-4\">\r\n//     <button\r\n//       onClick={handleSave}\r\n//       className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n//     >\r\n//       Enregistrer\r\n//     </button>\r\n//     <button\r\n//       onClick={handleCancel}\r\n//       className=\"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600\"\r\n//     >\r\n//       Annuler\r\n//     </button>\r\n//   </div>\r\n// )}\r\n\r\n// {isSaved && <p className=\"text-green-600 mt-4\">Image enregistrée avec succès </p>}\r\n//       </div>\r\n//     </div>\r\n//     </RequireAuth>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"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","debugId":null}}]
}