{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/app/post/page.tsx"],"sourcesContent":["// \"use client\";\n// import React,{useEffect, useState} from \"react\";\n// import useSWR from \"swr\";\n// import Post from \"../components/Post\";\n// import { PostModel } from \"../types\";\n// import Link from \"next/link\";\n// import { fetcher } from \"../libs\";\n// export default function Posts() {\n//   const [posts,setPosts] = useState<PostModel[]>([]);\n//   const { data, error, isLoading } = useSWR<any>(`/api/posts`, fetcher);\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       try {\n//         console.log('Début du fetch...');\n//         const response = await fetch('/api/posts');\n//         console.log('Réponse reçue:', response);\n        \n//         const data = await response.json();\n//         console.log('Données reçues:', data);\n        \n//         setPosts(data);\n//       } catch (error) {\n//         console.error('Erreur complète:', error);\n//       }\n//     };\n//     fetchPosts();\n//   }, []);\n\n\n//   let delete_Post : PostModel['deletePost']= async (id:number) => {\n//     const res = await fetch(`/api/posts/${id}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//     });\n//     const content = await res.json();\n//     if(content.success>0)\n//     {\n       \n//       setPosts(posts?.filter((post:PostModel)=>{  return post.id !== id  }));\n//     }\n//   }\n//   // return (\n//   //   <div className=\"w-full max-w-7xl m-auto\">\n//   //     <div>\n//   //   <Link href={`/post/create`} className=\"bg-green-500 p-2 inline-block text-white\">Créer</Link>\n\n//   //   </div>\n//   //     <table className=\"w-full border-collapse border border-slate-400\">\n//   //       {/* <caption className=\"caption-top py-5 font-bold text-green-500 text-2xl\">\n//   //         List Posts - Counter :\n//   //         <span className=\"text-red-500 font-bold\">{ posts?.length}</span>\n//   //       </caption> */}\n    \n//   //       <thead>\n//   //         <tr className=\"text-center\">\n            \n//   //           <th className=\"border border-slate-300\">Title</th>\n//   //           <th className=\"border border-slate-300\">contenu</th>\n//   //           <th className=\"border border-slate-300\">auteur</th>\n//   //           <th className=\"border border-slate-300\">Modify</th>\n//   //         </tr>\n//   //       </thead>\n//   //       <tbody>\n//   //          {/* <tr>\n//   //             <td colSpan={5}>\n//   //                <Link href={`/post/create`} className=\"bg-green-500 p-2 inline-block text-white\">Créer</Link>\n//   //             </td>\n//   //          </tr> */}\n//   //          {/* {\n//   //             posts && posts.map((item : PostModel)=><Post key={item.id} {...item} deletePost = {delete_Post} />)\n//   //          } */}\n\n//   //           {posts.map((posts) => (\n//   //                    <tr key={posts.id} className=\"hover:bg-gray-50\">\n//   //                      <td className=\"py-2 px-4 border-b\">{posts.title}</td>\n//   //                      <td className=\"py-2 px-4 border-b\">{posts.content}</td>\n//   //                      <td className=\"py-2 px-4 border-b\">{posts.author}</td>\n//   //                      <td className=\"py-2 px-4 border-b\">\n//   //                      <Link\n//   //                          href={`/post/read/${posts.id}`}\n//   //                          className=\"text-blue-500 hover:text-blue-700 mr-2\"\n//   //                        >\n//   //                          voir\n//   //                        </Link>\n//   //                        <Link\n//   //                          href={`/post/edit/${posts.id}`}\n//   //                          className=\"text-blue-500 hover:text-blue-700 mr-2\"\n//   //                        >\n//   //                          Modifier\n//   //                        </Link>\n//   //                        <button\n//   //                          onClick={() => delete_Post(posts.id)}\n//   //                          className=\"text-red-500 hover:text-red-700\"\n//   //                        >\n//   //                          Supprimer\n//   //                        </button>\n//   //                      </td>\n//   //                    </tr>\n//   //                  ))}\n//   //       </tbody>\n//   //     </table>\n//   //   </div>\n//   // );\n\n//   return (\n//     <div className=\"w-full max-w-7xl m-auto\">\n//       <table className=\"w-full border-collapse border border-slate-400\">\n//         <caption className=\"caption-top py-5 font-bold text-green-500 text-2xl\">\n//           List Posts - Counter :\n//           <span className=\"text-red-500 font-bold\">{ posts?.length}</span>\n//         </caption>\n    \n//         <thead>\n//           <tr className=\"text-center\">\n//             <th className=\"border border-slate-300\">ID</th>\n//             <th className=\"border border-slate-300\">Title</th>\n//             <th className=\"border border-slate-300\">contennu</th>\n//             <th className=\"border border-slate-300\">auteur</th>\n//             <th className=\"border border-slate-300\">Modif</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//            <tr>\n//               <td colSpan={5}>\n//                  <Link href={`/post/create`} className=\"bg-green-500 p-2 inline-block text-white\">Create</Link>\n//               </td>\n//            </tr>\n//            {\n//               posts && posts.map((item : PostModel)=><Post key={item.id} {...item} deletePost = {delete_Post} />)\n//            }\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n  \n\n'use client';\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\n\ninterface Post {\n  id: string;\n  title: string;\n  content: string;\n  author: string;\n  created_at: string;\n}\n\nexport default function PostList() {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n\n  const fetchPosts = async () => {\n    try {\n      const res = await fetch('/api/posts');\n      const data = await res.json();\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cet article ?')) {\n      try {\n        await fetch(`/api/posts/${id}`, { method: 'DELETE' });\n        setPosts(posts.filter(post => post.id !== id));\n      } catch (error) {\n        console.error('Delete error:', error);\n      }\n    }\n  };\n\n  useEffect(() => { fetchPosts(); }, []);\n\n  if (loading) return <div className=\"text-center p-8\">Chargement...</div>;\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Liste des Articles</h1>\n        <Link href=\"/post/create\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n          Créer un article\n        </Link>\n      </div>\n\n      <table className=\"w-full border-collapse\">\n        <thead>\n          <tr>\n            <th className=\"border p-2\">Titre</th>\n            <th className=\"border p-2\">Auteur</th>\n            <th className=\"border p-2\">Date</th>\n            <th className=\"border p-2\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {posts.map(post => (\n            <tr key={post.id}>\n              <td className=\"border p-2\">{post.title}</td>\n              <td className=\"border p-2\">{post.author}</td>\n              <td className=\"border p-2\">{new Date(post.created_at).toLocaleDateString()}</td>\n              <td className=\"border p-2 flex gap-2 justify-center\">\n                <Link\n                  href={`/post/read/${post.id}`}\n                  className=\"bg-green-500 text-white px-3 py-1 rounded\"\n                >\n                  Voir\n                </Link>\n                <Link\n                  href={`/post/edit/${post.id}`}\n                  className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\n                >\n                  Modifier\n                </Link>\n                <button\n                  onClick={() => handleDelete(post.id)}\n                  className=\"bg-red-500 text-white px-3 py-1 rounded\"\n                >\n                  Supprimer\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}