{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/node_modules/react-chartjs-2/src/utils.ts","file://C%3A/Users/komba/Gestion-contenu/AIBTZ/node_modules/react-chartjs-2/src/chart.tsx","file://C%3A/Users/komba/Gestion-contenu/AIBTZ/node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setOptions","chart","nextOptions","options","Object","assign","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","props","height","width","redraw","type","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","config","setTimeout","update","canvas","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Radar","RadarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Bubble","BubbleController","Pie","PieController","Scatter","ScatterController"],"mappings":"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","ignoreList":[0,1,2],"debugId":null}}]
}