{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/post/service/api.ts"],"sourcesContent":["import axios from 'axios';\r\n//import { CreatePostData, Post, UpdatePostData } from '../../types/post';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3003/api',\r\n});\r\nexport const getPosts = () => api.get('/posts');\r\nexport const getPost = (id: string) => api.get(`/posts/${id}`);\r\nexport const createPost = (postData: FormData) => api.post('/posts', postData, {\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data',\r\n  },\r\n});\r\nexport const updatePost = (id: string, postData: FormData) =>\r\n    api.put(`/posts/${id}`, postData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        \r\n      },\r\n      method: 'PUT',\r\n      \r\n    });\r\n\r\n    \r\nexport const deletePost = (id: string) => api.delete(`/posts/${id}`);\r\n// export const getPosts = () => api.get('/posts');\r\n// export const getPost = (id: string) => api.get(`/posts/${id}`);\r\n// export const createPost = (postData: any) => api.post('/posts', postData);\r\n// export const updatePost = (id: string, postData: any) => api.put(`/posts/${id}`, postData);\r\n// export const deletePost = (id: string) => api.delete(`/posts/${id}`);"],"names":[],"mappings":";;;;;;;AAAA;;AACA,0EAA0E;AAE1E,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AACO,MAAM,WAAW,IAAM,IAAI,GAAG,CAAC;AAC/B,MAAM,UAAU,CAAC,KAAe,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI;AACtD,MAAM,aAAa,CAAC,WAAuB,IAAI,IAAI,CAAC,UAAU,UAAU;QAC7E,SAAS;YACP,gBAAgB;QAClB;IACF;AACO,MAAM,aAAa,CAAC,IAAY,WACnC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU;QAChC,SAAS;YACP,gBAAgB;QAElB;QACA,QAAQ;IAEV;AAGG,MAAM,aAAa,CAAC,KAAe,IAAI,MAAM,CAAC,CAAC,OAAO,EAAE,IAAI,GACnE,mDAAmD;CACnD,kEAAkE;CAClE,6EAA6E;CAC7E,8FAA8F;CAC9F,wEAAwE","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/components/PostForm.tsx"],"sourcesContent":["\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\n\r\ninterface PostFormProps {\r\n  onSubmit: (data: FormData) => void;\r\n  initialData?: {\r\n    title?: string;\r\n    content?: string;\r\n    author?: string;\r\n    imagePath?: string;\r\n  };\r\n  isSubmitting?: boolean;\r\n}\r\n\r\nexport default function PostForm({ onSubmit, initialData = {}, isSubmitting = false }: PostFormProps) {\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: { ...initialData, image: null },\r\n  });\r\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n\r\n  const handleFormSubmit = async(data: any) => {\r\n    const formData = new FormData();\r\n    formData.append('title', data.title);\r\n    formData.append('content', data.content);\r\n    formData.append('author', data.author);\r\n    \r\n    if (data.image && data.image[0]) {\r\n      // Append the new image if it exists\r\n      formData.append('image', data.image[0]);\r\n    } else if (initialData.imagePath) {\r\n      // Retain the existing image path if no new image is uploaded\r\n      formData.append('imagePath', initialData.imagePath);\r\n    }\r\n    \r\n    onSubmit(formData);\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewImage(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-4 max-w-2xl mx-auto\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Titre *</label>\r\n        <input\r\n          {...register('title', { required: 'Le titre est requis' })}\r\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n            errors.title ? 'border-red-500' : 'border'\r\n          } p-2`}\r\n        />\r\n        {errors.title && (\r\n          <p className=\"mt-1 text-sm text-red-600\">{errors.title.message as string}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Contenu *</label>\r\n        <textarea\r\n          {...register('content', { required: 'Le contenu est requis' })}\r\n          rows={4}\r\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n            errors.content ? 'border-red-500' : 'border'\r\n          } p-2`}\r\n        />\r\n        {errors.content && (\r\n          <p className=\"mt-1 text-sm text-red-600\">{errors.content.message as string}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Auteur *</label>\r\n        <input\r\n          {...register('author', { required: \"L'auteur est requis\" })}\r\n          className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n            errors.author ? 'border-red-500' : 'border'\r\n          } p-2`}\r\n        />\r\n        {errors.author && (\r\n          <p className=\"mt-1 text-sm text-red-600\">{errors.author.message as string}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700\">Image</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          {...register('image')}\r\n          accept=\"image/*\"\r\n          onChange={handleImageChange}\r\n          className=\"mt-1 block w-full text-sm text-gray-500\r\n            file:mr-4 file:py-2 file:px-4\r\n            file:rounded-md file:border-0\r\n            file:text-sm file:font-semibold\r\n            file:bg-blue-50 file:text-blue-700\r\n            hover:file:bg-blue-100\"\r\n        />\r\n        {previewImage ? (\r\n          <div className=\"mt-2\">\r\n            <img \r\n              src={previewImage} \r\n              alt=\"Preview\" \r\n              className=\"h-32 object-cover rounded\"\r\n            />\r\n          </div>\r\n        ) : initialData?.imagePath ? (\r\n          <div className=\"mt-2\">\r\n            <img \r\n              src={`http://localhost:3000${initialData.imagePath}`} \r\n              alt=\"Current\" \r\n              className=\"h-32 object-cover rounded\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\r\n        >\r\n          {isSubmitting ? 'Enregistrement...' : 'Enregistrer'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// import { useForm } from 'react-hook-form';\r\n// import { useState } from 'react';\r\n\r\n// export default function PostForm({ onSubmit, initialData = {}, isSubmitting = false }: {\r\n//   onSubmit: (data: FormData) => void;\r\n//   initialData?: any;\r\n//   isSubmitting?: boolean;\r\n// }) {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm({\r\n//     defaultValues: initialData,\r\n//   });\r\n//   const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n\r\n//   const handleFormSubmit = (data: any) => {\r\n//     const formData = new FormData();\r\n//     formData.append('title', data.title);\r\n//     formData.append('content', data.content);\r\n//     formData.append('author', data.author);\r\n    \r\n//     if (data.image && data.image[0]) {\r\n//       formData.append('image', data.image[0]);\r\n//     }\r\n    \r\n//     onSubmit(formData);\r\n//   };\r\n\r\n//   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const file = e.target.files?.[0];\r\n//     if (file) {\r\n//       const reader = new FileReader();\r\n//       reader.onloadend = () => {\r\n//         setPreviewImage(reader.result as string);\r\n//       };\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-4\">\r\n//       {/* Champs texte restent inchang√©s */}\r\n      \r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Image</label>\r\n//         <input\r\n//           type=\"file\"\r\n//           id=\"image\"\r\n//           {...register('image')}\r\n//           accept=\"image/*\"\r\n//           onChange={handleImageChange}\r\n//           className=\"mt-1 block w-full text-sm text-gray-500\r\n//             file:mr-4 file:py-2 file:px-4\r\n//             file:rounded-md file:border-0\r\n//             file:text-sm file:font-semibold\r\n//             file:bg-blue-50 file:text-blue-700\r\n//             hover:file:bg-blue-100\"\r\n//         />\r\n//         {previewImage && (\r\n//           <div className=\"mt-2\">\r\n//             <img \r\n//               src={previewImage} \r\n//               alt=\"Preview\" \r\n//               className=\"h-32 object-cover rounded\"\r\n//             />\r\n//           </div>\r\n//         )}\r\n//         {initialData?.image && !previewImage && (\r\n//           <div className=\"mt-2\">\r\n//             <img \r\n//               src={`http://localhost:3003${initialData.image}`} \r\n//               alt=\"Current\" \r\n//               className=\"h-32 object-cover rounded\"\r\n//             />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//          <button\r\n//             type=\"submit\"\r\n//             disabled={isSubmitting}\r\n//              className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\r\n//            >\r\n//              {isSubmitting ? 'Enregistrement...' : 'Enregistrer'}\r\n//            </button>\r\n//           </div>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n// import { useForm } from 'react-hook-form';\r\n// import React from 'react';\r\n\r\n// export default function PostForm({ onSubmit, initialData = {}, isSubmitting = false }: {\r\n//   onSubmit: (data: any) => void;\r\n//   initialData?: any;\r\n//   isSubmitting?: boolean;\r\n// }) {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm({\r\n//     defaultValues: initialData,\r\n//   });\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Titre *</label>\r\n//         <input\r\n//           {...register('title', { required: 'Le titre est requis' })}\r\n//           className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n//             errors.title ? 'border-red-500' : 'border'\r\n//           }`}\r\n//         />\r\n//         {errors.title && (\r\n//           <p className=\"mt-1 text-sm text-red-600\">{errors.title.message as string}</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Contenu *</label>\r\n//         <textarea\r\n//           {...register('content', { required: 'Le contenu est requis' })}\r\n//           rows={4}\r\n//           className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n//             errors.content ? 'border-red-500' : 'border'\r\n//           }`}\r\n//         />\r\n//         {errors.content && (\r\n//           <p className=\"mt-1 text-sm text-red-600\">{errors.content.message as string}</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Auteur *</label>\r\n//         <input\r\n//           {...register('author', { required: \"L'auteur est requis\" })}\r\n//           className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 ${\r\n//             errors.author ? 'border-red-500' : 'border'\r\n//           }`}\r\n//         />\r\n//         {errors.author && (\r\n//           <p className=\"mt-1 text-sm text-red-600\">{errors.author.message as string}</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Image URL (optionnel)</label>\r\n//         <input\r\n//           {...register('image')}\r\n//           className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n//           placeholder=\"https://example.com/image.jpg\"\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\r\n//         >\r\n//           {isSubmitting ? 'Enregistrement...' : 'Enregistrer'}\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// }"],"names":[],"mappings":";;;;AACA;AACA;;;;AAae,SAAS,SAAS,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,EAAE,eAAe,KAAK,EAAiB;IAClG,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QAChE,eAAe;YAAE,GAAG,WAAW;YAAE,OAAO;QAAK;IAC/C;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,MAAM,mBAAmB,OAAM;QAC7B,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,SAAS,KAAK,KAAK;QACnC,SAAS,MAAM,CAAC,WAAW,KAAK,OAAO;QACvC,SAAS,MAAM,CAAC,UAAU,KAAK,MAAM;QAErC,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE,EAAE;YAC/B,oCAAoC;YACpC,SAAS,MAAM,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE;QACxC,OAAO,IAAI,YAAY,SAAS,EAAE;YAChC,6DAA6D;YAC7D,SAAS,MAAM,CAAC,aAAa,YAAY,SAAS;QACpD;QAEA,SAAS;IACX;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,MAAM;YACR,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,GAAG;gBACjB,gBAAgB,OAAO,MAAM;YAC/B;YACA,OAAO,aAAa,CAAC;QACvB;IACF;IAEA,qBACE,8OAAC;QAAK,UAAU,aAAa;QAAmB,WAAU;;0BACxD,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,8OAAC;wBACE,GAAG,SAAS,SAAS;4BAAE,UAAU;wBAAsB,EAAE;wBAC1D,WAAW,CAAC,iGAAiG,EAC3G,OAAO,KAAK,GAAG,mBAAmB,SACnC,IAAI,CAAC;;;;;;oBAEP,OAAO,KAAK,kBACX,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;0BAIlE,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,8OAAC;wBACE,GAAG,SAAS,WAAW;4BAAE,UAAU;wBAAwB,EAAE;wBAC9D,MAAM;wBACN,WAAW,CAAC,iGAAiG,EAC3G,OAAO,OAAO,GAAG,mBAAmB,SACrC,IAAI,CAAC;;;;;;oBAEP,OAAO,OAAO,kBACb,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,OAAO,CAAC,OAAO;;;;;;;;;;;;0BAIpE,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,8OAAC;wBACE,GAAG,SAAS,UAAU;4BAAE,UAAU;wBAAsB,EAAE;wBAC3D,WAAW,CAAC,iGAAiG,EAC3G,OAAO,MAAM,GAAG,mBAAmB,SACpC,IAAI,CAAC;;;;;;oBAEP,OAAO,MAAM,kBACZ,8OAAC;wBAAE,WAAU;kCAA6B,OAAO,MAAM,CAAC,OAAO;;;;;;;;;;;;0BAInE,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAA0C;;;;;;kCAC3D,8OAAC;wBACC,MAAK;wBACL,IAAG;wBACF,GAAG,SAAS,QAAQ;wBACrB,QAAO;wBACP,UAAU;wBACV,WAAU;;;;;;oBAOX,6BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,KAAK;4BACL,KAAI;4BACJ,WAAU;;;;;;;;;;+BAGZ,aAAa,0BACf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,KAAK,CAAC,qBAAqB,EAAE,YAAY,SAAS,EAAE;4BACpD,KAAI;4BACJ,WAAU;;;;;;;;;;+BAGZ;;;;;;;0BAGN,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,MAAK;oBACL,UAAU;oBACV,WAAU;8BAET,eAAe,sBAAsB;;;;;;;;;;;;;;;;;AAKhD,EAKA,6CAA6C;CAC7C,oCAAoC;CAEpC,2FAA2F;CAC3F,wCAAwC;CACxC,uBAAuB;CACvB,4BAA4B;CAC5B,OAAO;CACP,wEAAwE;CACxE,kCAAkC;CAClC,QAAQ;CACR,2EAA2E;CAE3E,8CAA8C;CAC9C,uCAAuC;CACvC,4CAA4C;CAC5C,gDAAgD;CAChD,8CAA8C;CAE9C,yCAAyC;CACzC,iDAAiD;CACjD,QAAQ;CAER,0BAA0B;CAC1B,OAAO;CAEP,4EAA4E;CAC5E,wCAAwC;CACxC,kBAAkB;CAClB,yCAAyC;CACzC,mCAAmC;CACnC,oDAAoD;CACpD,WAAW;CACX,oCAAoC;CACpC,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,6EAA6E;CAC7E,+CAA+C;CAE/C,cAAc;CACd,mFAAmF;CACnF,iBAAiB;CACjB,wBAAwB;CACxB,uBAAuB;CACvB,mCAAmC;CACnC,6BAA6B;CAC7B,yCAAyC;CACzC,+DAA+D;CAC/D,4CAA4C;CAC5C,4CAA4C;CAC5C,8CAA8C;CAC9C,iDAAiD;CACjD,sCAAsC;CACtC,aAAa;CACb,6BAA6B;CAC7B,mCAAmC;CACnC,oBAAoB;CACpB,oCAAoC;CACpC,+BAA+B;CAC/B,sDAAsD;CACtD,iBAAiB;CACjB,mBAAmB;CACnB,aAAa;CACb,oDAAoD;CACpD,mCAAmC;CACnC,oBAAoB;CACpB,mEAAmE;CACnE,+BAA+B;CAC/B,sDAAsD;CACtD,iBAAiB;CACjB,mBAAmB;CACnB,aAAa;CACb,eAAe;CAEf,cAAc;CACd,mBAAmB;CACnB,4BAA4B;CAC5B,sCAAsC;CACtC,wQAAwQ;CACxQ,eAAe;CACf,oEAAoE;CACpE,uBAAuB;CACvB,mBAAmB;CACnB,cAAc;CACd,OAAO;CACP,IAAI;CAKJ,6CAA6C;CAC7C,6BAA6B;CAE7B,2FAA2F;CAC3F,mCAAmC;CACnC,uBAAuB;CACvB,4BAA4B;CAC5B,OAAO;CACP,wEAAwE;CACxE,kCAAkC;CAClC,QAAQ;CAER,aAAa;CACb,qEAAqE;CACrE,cAAc;CACd,qFAAqF;CACrF,iBAAiB;CACjB,wEAAwE;CACxE,4HAA4H;CAC5H,yDAAyD;CACzD,gBAAgB;CAChB,aAAa;CACb,6BAA6B;CAC7B,0FAA0F;CAC1F,aAAa;CACb,eAAe;CAEf,cAAc;CACd,uFAAuF;CACvF,oBAAoB;CACpB,4EAA4E;CAC5E,qBAAqB;CACrB,4HAA4H;CAC5H,2DAA2D;CAC3D,gBAAgB;CAChB,aAAa;CACb,+BAA+B;CAC/B,4FAA4F;CAC5F,aAAa;CACb,eAAe;CAEf,cAAc;CACd,sFAAsF;CACtF,iBAAiB;CACjB,yEAAyE;CACzE,4HAA4H;CAC5H,0DAA0D;CAC1D,gBAAgB;CAChB,aAAa;CACb,8BAA8B;CAC9B,2FAA2F;CAC3F,aAAa;CACb,eAAe;CAEf,cAAc;CACd,mGAAmG;CACnG,iBAAiB;CACjB,mCAAmC;CACnC,gIAAgI;CAChI,wDAAwD;CACxD,aAAa;CACb,eAAe;CAEf,cAAc;CACd,kBAAkB;CAClB,0BAA0B;CAC1B,oCAAoC;CACpC,qQAAqQ;CACrQ,YAAY;CACZ,iEAAiE;CACjE,oBAAoB;CACpB,eAAe;CACf,cAAc;CACd,OAAO;CACP,IAAI","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/post/create/page.tsx"],"sourcesContent":["'use client';\n// import { useRouter } from 'next/router';\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\nimport { createPost } from '../service/api';\nimport PostForm from '../../components/PostForm';\nimport Head from 'next/head';\n\n\nexport default function CreatePostPage() {\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const onSubmit = async (formData: FormData) => {\n    try {\n      setIsSubmitting(true);\n      setError(null);\n      await createPost(formData);\n      router.push('/post');\n    } catch (err) {\n      setError('Erreur lors de la cr√©ation du post');\n      console.error(err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-800\">Cr√©er un nouveau Post</h1>\n        <p className=\"text-gray-600 mt-2\">Remplissez le formulaire pour cr√©er un nouveau post</p>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\n          {error}\n        </div>\n      )}\n\n      <PostForm onSubmit={onSubmit} isSubmitting={isSubmitting} />\n    </div>\n  );\n}\n\n// \"use client\"\n// import React, {useState } from 'react'\n// import { useRouter } from 'next/navigation'\n// export default function PostCreate() {\n//   const router = useRouter()\n//   const [title, setTitle] =useState<string>('');\n//   const [body, setBody] = useState<string>('');\n//   const addPost = async (e: any) => {\n//     e.preventDefault()\n//     if (title!=\"\" && body!=\"\") {\n//       const formData = {\n//           title: title,\n//           content: body\n//       }\n//       const add = await fetch('/api/posts', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n//       const content = await add.json();\n//       if(content.success>0)\n//       {\n//         router.push('/post');\n//       }\n      \n//     }\n//   };\n//   return (\n//     <form className='w-full' onSubmit={addPost}>\n//         <span className='font-bold text-yellow-500 py-2 block underline text-2xl'>ajout</span>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Titre</label>\n//              <input type='text' name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm'  onChange={(e:any)=>setTitle(e.target.value)}/>\n//         </div>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Content</label>\n//              <textarea name='content' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' onChange={(e:any)=>setBody(e.target.value)} />\n//         </div>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>auteur</label>\n//              <textarea name='author' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' onChange={(e:any)=>setBody(e.target.value)} />\n//         </div>\n//         <div className='w-full py-2'>\n//           <button className=\"w-20 p-2 text-white border-gray-200 border-[1px] rounded-sm bg-green-400\">Submit</button>\n//         </div>\n//     </form>\n//   )\n// }\n"],"names":[],"mappings":";;;;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AALA;;;;;;AASe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,WAAW,OAAO;QACtB,IAAI;YACF,gBAAgB;YAChB,SAAS;YACT,MAAM,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE;YACjB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAK;YACZ,SAAS;YACT,QAAQ,KAAK,CAAC;QAChB,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;YAGnC,uBACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;0BAIL,8OAAC,8HAAA,CAAA,UAAQ;gBAAC,UAAU;gBAAU,cAAc;;;;;;;;;;;;AAGlD,EAEA,eAAe;CACf,yCAAyC;CACzC,8CAA8C;CAC9C,yCAAyC;CACzC,+BAA+B;CAC/B,mDAAmD;CACnD,kDAAkD;CAClD,wCAAwC;CACxC,yBAAyB;CACzB,mCAAmC;CACnC,2BAA2B;CAC3B,0BAA0B;CAC1B,0BAA0B;CAC1B,UAAU;CACV,gDAAgD;CAChD,0BAA0B;CAC1B,qBAAqB;CACrB,+CAA+C;CAC/C,aAAa;CACb,yCAAyC;CACzC,YAAY;CACZ,0CAA0C;CAC1C,8BAA8B;CAC9B,UAAU;CACV,gCAAgC;CAChC,UAAU;CAEV,QAAQ;CACR,OAAO;CACP,aAAa;CACb,mDAAmD;CACnD,iGAAiG;CACjG,wCAAwC;CACxC,wFAAwF;CACxF,8JAA8J;CAC9J,iBAAiB;CACjB,wCAAwC;CACxC,0FAA0F;CAC1F,sJAAsJ;CACtJ,iBAAiB;CACjB,wCAAwC;CACxC,yFAAyF;CACzF,qJAAqJ;CACrJ,iBAAiB;CACjB,wCAAwC;CACxC,yHAAyH;CACzH,iBAAiB;CACjB,cAAc;CACd,MAAM;CACN,IAAI","debugId":null}}]
}