{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/generate-image/page.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import Link from 'next/link';\r\n// // import { useSession } from 'next-auth/react';\r\n\r\n\r\n// type ImageData = {\r\n//   _id: string;\r\n//   url: string;\r\n//   prompt: string;\r\n//   style?: string;\r\n//   size: string;\r\n//   provider: string;\r\n//   createdAt: string;\r\n//   userId?: {\r\n//     _id: string;\r\n//     username?: string;\r\n//     email?: string;\r\n//   };\r\n// };\r\n\r\n// export default function ImageListPage() {\r\n//   const [images, setImages] = useState<ImageData[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState('');\r\n//   const [savedImages, setSavedImages] = useState<any[]>([]);\r\n//   const { data: session } = useSession();\r\n// const userId = session?.user?.id;\r\n\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchImages = async () => {\r\n// //       try {\r\n// //         const res = await fetch('http://localhost:3003/api/images');\r\n// //         if (!res.ok) throw new Error('Erreur lors du chargement');\r\n// //         const data = await res.json();\r\n// //         setImages(data);\r\n// //       } catch (err: any) {\r\n// //         setError(err.message || 'Erreur inconnue');\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchImages();\r\n// //   }, []);\r\n// useEffect(() => {\r\n//   const fetchSavedImages = async () => {\r\n//     try {\r\n//       const res = await fetch('http://localhost:3003/api/images'); // adapte selon ton backend\r\n//       if (!res.ok) throw new Error('Erreur lors de la récupération des images');\r\n//       const data = await res.json();\r\n//       setSavedImages(data); // tu dois créer un nouvel état\r\n//     } catch (err) {\r\n//       console.error('Erreur chargement:', err);\r\n//     }\r\n//   };\r\n\r\n//   fetchSavedImages();\r\n// }, []);\r\n//   return (\r\n//     <div className=\"max-w-5xl mx-auto px-4 py-10\">\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-3xl font-bold\">Images Générées</h1>\r\n//         <Link href=\"/generate-image/create\">\r\n//           <button className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\">\r\n//             + Nouvelle image\r\n//           </button>\r\n//         </Link>\r\n//       </div>\r\n\r\n// <h2 className=\"text-xl font-bold mt-10 mb-4\">Images générées précédemment</h2>\r\n// <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//   {savedImages.map((img, index) => (\r\n//     <div key={index} className=\"border rounded p-4 shadow\">\r\n//       <img src={img.url} alt={`saved-${index}`} className=\"w-full rounded mb-2\" />\r\n//       <p><strong>Prompt:</strong> {img.prompt}</p>\r\n//       <p><strong>Fournisseur:</strong> {img.provider}</p>\r\n//       <p><strong>Taille:</strong> {img.size}</p>\r\n//       <p><strong>Utilisateur:</strong> {img.userId?.email || 'Inconnu'}</p>\r\n//       <p className=\"text-sm text-gray-500\">{new Date(img.createdAt).toLocaleString()}</p>\r\n//     </div>\r\n//   ))}\r\n// </div>\r\n\r\n      \r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import Link from 'next/link';\r\n// import RequireAuth from '@/components/RequireAuth';\r\n\r\n// interface GeneratedImage {\r\n//   _id: string;\r\n//   prompt: string;\r\n//   style?: string;\r\n//   provider: string;\r\n//   size: string;\r\n//   n: number;\r\n//   urls: string[];\r\n//   userId: string;\r\n//   createdAt: string;\r\n// }\r\n\r\n// export default function AdminImagesPage() {\r\n//   const [images, setImages] = useState<GeneratedImage[]>([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchImages = async () => {\r\n//       try {\r\n//         const res = await fetch('http://localhost:3003/api/images');\r\n//         if (!res.ok) throw new Error('Erreur lors du chargement des images');\r\n//         const data = await res.json();\r\n//         setImages(data);\r\n//       } catch (err: any) {\r\n//         setError(err.message || 'Erreur inconnue');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchImages();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <RequireAuth>\r\n//       <div className=\"max-w-6xl mx-auto px-4 py-10\">\r\n//         <div className=\"flex justify-between items-center mb-6\">\r\n//           <h1 className=\"text-3xl font-bold\">Toutes les Images Générées</h1>\r\n//           <Link\r\n//             href=\"/generate-image/create\"\r\n//             className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n//           >\r\n//             + Créer une nouvelle image\r\n//           </Link>\r\n//         </div>\r\n\r\n//         {loading && <p>Chargement...</p>}\r\n//         {error && <p className=\"text-red-600\">{error}</p>}\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//           {images.map((img) => (\r\n//             <div key={img._id} className=\"border rounded p-4 shadow bg-white\">\r\n//               <div className=\"text-sm text-gray-700 space-y-1\">\r\n//                 <p><strong>Utilisateur :</strong> {img.userId}</p>\r\n//                 <p><strong>Prompt :</strong> {img.prompt}</p>\r\n//                 {img.style && <p><strong>Style :</strong> {img.style}</p>}\r\n//                 <p><strong>Taille :</strong> {img.size}</p>\r\n//                 <p><strong>Fournisseur :</strong> {img.provider}</p>\r\n//                 <p><strong>Nombre :</strong> {img.n}</p>\r\n//                 <p><strong>Date :</strong> {new Date(img.createdAt).toLocaleString()}</p>\r\n//               </div>\r\n//               <div className=\"grid grid-cols-2 gap-2 mt-3\">\r\n//                 {img.urls.map((url, idx) => (\r\n//                   <img key={idx} src={url} alt={`img-${idx}`} className=\"rounded w-full h-auto\" />\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </RequireAuth>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,+CAA+C;AAC/C,gCAAgC;AAChC,mDAAmD;AAGnD,qBAAqB;AACrB,iBAAiB;AACjB,iBAAiB;AACjB,oBAAoB;AACpB,oBAAoB;AACpB,kBAAkB;AAClB,sBAAsB;AACtB,uBAAuB;AACvB,eAAe;AACf,mBAAmB;AACnB,yBAAyB;AACzB,sBAAsB;AACtB,OAAO;AACP,KAAK;AAEL,4CAA4C;AAC5C,2DAA2D;AAC3D,kDAAkD;AAClD,4CAA4C;AAC5C,+DAA+D;AAC/D,4CAA4C;AAC5C,oCAAoC;AAGpC,yBAAyB;AACzB,2CAA2C;AAC3C,iBAAiB;AACjB,0EAA0E;AAC1E,wEAAwE;AACxE,4CAA4C;AAC5C,8BAA8B;AAC9B,gCAAgC;AAChC,yDAAyD;AACzD,uBAAuB;AACvB,gCAAgC;AAChC,aAAa;AACb,YAAY;AAEZ,wBAAwB;AACxB,eAAe;AACf,oBAAoB;AACpB,2CAA2C;AAC3C,YAAY;AACZ,iGAAiG;AACjG,mFAAmF;AACnF,uCAAuC;AACvC,8DAA8D;AAC9D,sBAAsB;AACtB,kDAAkD;AAClD,QAAQ;AACR,OAAO;AAEP,wBAAwB;AACxB,UAAU;AACV,aAAa;AACb,qDAAqD;AACrD,iEAAiE;AACjE,kEAAkE;AAClE,+CAA+C;AAC/C,4FAA4F;AAC5F,+BAA+B;AAC/B,sBAAsB;AACtB,kBAAkB;AAClB,eAAe;AAEf,iFAAiF;AACjF,0DAA0D;AAC1D,uCAAuC;AACvC,8DAA8D;AAC9D,qFAAqF;AACrF,qDAAqD;AACrD,4DAA4D;AAC5D,mDAAmD;AACnD,8EAA8E;AAC9E,4FAA4F;AAC5F,aAAa;AACb,QAAQ;AACR,SAAS;AAIT,aAAa;AACb,OAAO;AACP,IAAI;AAIJ,gBAAgB;AAEhB,+CAA+C;AAC/C,gCAAgC;AAChC,sDAAsD;AAEtD,6BAA6B;AAC7B,iBAAiB;AACjB,oBAAoB;AACpB,oBAAoB;AACpB,sBAAsB;AACtB,kBAAkB;AAClB,eAAe;AACf,oBAAoB;AACpB,oBAAoB;AACpB,uBAAuB;AACvB,IAAI;AAEJ,8CAA8C;AAC9C,gEAAgE;AAChE,kDAAkD;AAClD,4CAA4C;AAE5C,sBAAsB;AACtB,wCAAwC;AACxC,cAAc;AACd,uEAAuE;AACvE,gFAAgF;AAChF,yCAAyC;AACzC,2BAA2B;AAC3B,6BAA6B;AAC7B,sDAAsD;AACtD,oBAAoB;AACpB,6BAA6B;AAC7B,UAAU;AACV,SAAS;AAET,qBAAqB;AACrB,YAAY;AAEZ,aAAa;AACb,oBAAoB;AACpB,uDAAuD;AACvD,mEAAmE;AACnE,+EAA+E;AAC/E,kBAAkB;AAClB,4CAA4C;AAC5C,qFAAqF;AACrF,cAAc;AACd,yCAAyC;AACzC,oBAAoB;AACpB,iBAAiB;AAEjB,4CAA4C;AAC5C,6DAA6D;AAE7D,iFAAiF;AACjF,mCAAmC;AACnC,iFAAiF;AACjF,kEAAkE;AAClE,qEAAqE;AACrE,gEAAgE;AAChE,6EAA6E;AAC7E,8DAA8D;AAC9D,uEAAuE;AACvE,2DAA2D;AAC3D,4FAA4F;AAC5F,uBAAuB;AACvB,8DAA8D;AAC9D,gDAAgD;AAChD,qGAAqG;AACrG,sBAAsB;AACtB,uBAAuB;AACvB,qBAAqB;AACrB,gBAAgB;AAChB,iBAAiB;AACjB,eAAe;AACf,qBAAqB;AACrB,OAAO;AACP,IAAI","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA,eAAwB;YAAA;gBAAsB,EAAC,UAAA;oBAAA;oBAAA,CAEzG;oBAAA,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;YAAA;SAAA;;SACNC,UAAU;cACV,IAAA;YAAA,MAAA,4BAA2C;iBAC3CC,MAAAA,MAAY,EAAA;wBAAA;4BACZC,KAAAA,CAAAA,GAAAA,EAAU,0MAAVA,CAAAA,sBAAU,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACVC,OAAAA,mSAAU,EAAE,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACAC;qBAAAA,MAAU;gBACRC,YAAYnB;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0],"debugId":null}}]
}