{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/content/create/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Editor from '@/app/components/Editor';\r\n\r\ninterface Content {\r\n  _id: string;\r\n  title: string;\r\n  style: string;\r\n  length: string;\r\n  provider: string;\r\n  content: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport default function Home() {\r\n  const [title, setTitle] = useState('');\r\n  const [style, setStyle] = useState('standard');\r\n  const [length, setLength] = useState('medium');\r\n  const [provider, setProvider] = useState<'gpt-4' | 'deepseek'>('gpt-4')\r\n  const [generatedContent, setGeneratedContent] = useState('<p>Contenu initial g√©n√©r√©</p>');\r\n  const [contents, setContents] = useState<Content[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  // const [html, setHtml] = useState(\"<p>Contenu initial g√©n√©r√© par GPT</p>\");\r\n\r\n  // ‚ö° R√©cup√©rer les contenus enregistr√©s\r\n  // const fetchContents = async () => {\r\n  //   try {\r\n  //     const response = await axios.get<Content[]>('http://localhost:3003/api/content');\r\n  //     setContents(response.data);\r\n  //   } catch (err) {\r\n  //     console.error('Erreur lors du fetch des contenus :', err);\r\n  //     setError('Erreur lors de la r√©cup√©ration des contenus');\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   fetchContents();\r\n  // }, []);\r\n\r\n  // üß† G√©n√©rer le contenu\r\n  const handleGenerate = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.post('http://localhost:3003/api/content/generate', {\r\n        title,\r\n        style,\r\n        length,\r\n        provider,\r\n      });\r\n\r\n      setGeneratedContent(response.data.content);\r\n    } catch (err) {\r\n      console.error('Erreur g√©n√©ration :', err);\r\n      setError('Erreur lors de la g√©n√©ration');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n  const saveContent = async () => {\r\n    try {\r\n      console.log('tentative d enregistrement')\r\n      const response  = await axios.post('http://localhost:3003/api/content', {\r\n        title,\r\n        style,\r\n        length,\r\n        provider,\r\n        content: generatedContent,\r\n      });\r\n     console.log(\"‚úÖ Enregistrement r√©ussi :\", response.data);\r\n    alert(\"Contenu enregistr√© avec succ√®s !\");\r\n    fetchContents(); // rafra√Æchit la liste\r\n  } catch (error) {\r\n    console.error(\" Erreur enregistrement :\", error);\r\n    alert(\"Erreur lors de l'enregistrement.\");\r\n  }\r\n  };\r\n\r\n  const fetchContents = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3003/api/content');\r\n      setContents(res.data);\r\n    } catch (err) {\r\n      console.error('Erreur lors du fetch des contenus :', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContents();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <main className=\"p-6 max-w-3xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">G√©n√©rateur de contenu IA</h1>\r\n\r\n      <div className=\"space-y-4\">\r\n        <input\r\n          className=\"w-full border p-2 rounded\"\r\n          type=\"text\"\r\n          placeholder=\"Titre de l'article\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <select className=\"w-full border p-2 rounded\" value={style} onChange={(e) => setStyle(e.target.value)}>\r\n          <option value=\"standard\">Style standard</option>\r\n          <option value=\"marketing\">Style marketing</option>\r\n          <option value=\"humour\">Style humour</option>\r\n        <option value=\"formal\">Formel</option>\r\n             <option value=\"casual\">D√©contract√©</option>\r\n             <option value=\"professional\">Professionnel</option>\r\n            <option value=\"academic\">Acad√©mique</option>\r\n            <option value=\"creative\">Cr√©atif</option>\r\n           <option value=\"persuasive\">Persuasif</option>\r\n           <option value=\"informative\">Informatif</option>\r\n        </select>\r\n\r\n        <select className=\"w-full border p-2 rounded\" value={length} onChange={(e) => setLength(e.target.value)}>\r\n          <option value=\"short\">un text Court</option>\r\n          <option value=\"medium\">un texteMoyen</option>\r\n          <option value=\"long\"> un texte Long</option>\r\n        </select>\r\n\r\n        <select className=\"w-full border p-2 rounded\" value={provider} \r\n        onChange={(e) => setProvider(e.target.value as 'gpt-4' | 'deepseek')}>\r\n          <option value=\"gpt-4\">GPT-4</option>\r\n          <option value=\"gpt-4o\">GPT-4o</option>\r\n          <option value=\"deepseek\">DeepSeek</option>\r\n        </select>\r\n\r\n        <button\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n          onClick={handleGenerate}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'G√©n√©ration...' : 'G√©n√©rer'}\r\n        </button>\r\n      </div>\r\n\r\n      {generatedContent && (\r\n        <div className=\"mt-6\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">Contenu g√©n√©r√© :</h2>\r\n          <textarea\r\n            className=\"w-full border p-2 rounded min-h-[200px]\"\r\n            value={generatedContent}\r\n            readOnly\r\n          />\r\n          \r\n          <button\r\n            className=\"mt-2 bg-green-600 text-white px-4 py-2 rounded\"\r\n            onClick={saveContent} disabled={!generatedContent} \r\n          >\r\n            Enregistrer\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      \r\n    </main>\r\n  );\r\n}\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// type ContentItem = {\r\n//   _id: string;\r\n//   title: string;\r\n//   style: string;\r\n//   length: string;\r\n//   provider: string;\r\n//   content: string;\r\n//   createdAt: string;\r\n// };\r\n\r\n// export default function ContentPage() {\r\n//   const [title, setTitle] = useState('');\r\n//   const [style, setStyle] = useState('informatif');\r\n//   const [length, setLength] = useState('moyenne');\r\n//   const [provider, setProvider] = useState('gpt-4');\r\n//   const [generated, setGenerated] = useState<ContentItem | null>(null);\r\n//   const [allContents, setAllContents] = useState<ContentItem[]>([]);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleGenerate = async () => {\r\n//     setLoading(true);\r\n//     setGenerated(null);\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3003/api/content/generate', {\r\n//         title,\r\n//         style,\r\n//         length,\r\n//         provider,\r\n//       });\r\n//       setGenerated(response.data);\r\n//       fetchContents(); // refresh list\r\n//     } catch (error) {\r\n//       alert('Erreur lors de la g√©n√©ration');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const fetchContents = async () => {\r\n//     const res = await axios.get('http://localhost:3003/api/content');\r\n//     setAllContents(res.data);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchContents();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"max-w-3xl mx-auto p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">G√©n√©ration d'article avec IA</h1>\r\n\r\n//       <div className=\"space-y-4 border p-4 rounded-lg shadow\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Titre de l'article\"\r\n//           className=\"w-full border p-2 rounded\"\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//         />\r\n\r\n//         <div className=\"flex gap-4\">\r\n//           <select value={style} onChange={(e) => setStyle(e.target.value)} className=\"border p-2 rounded w-1/3\">\r\n//             <option value=\"informatif\">Informatif</option>\r\n//             <option value=\"cr√©atif\">Cr√©atif</option>\r\n//             <option value=\"persuasif\">Persuasif</option>\r\n//           </select>\r\n\r\n//           <select value={length} onChange={(e) => setLength(e.target.value)} className=\"border p-2 rounded w-1/3\">\r\n//             <option value=\"courte\">Courte</option>\r\n//             <option value=\"moyenne\">Moyenne</option>\r\n//             <option value=\"longue\">Longue</option>\r\n//           </select>\r\n\r\n//           <select value={provider} onChange={(e) => setProvider(e.target.value)} className=\"border p-2 rounded w-1/3\">\r\n//             <option value=\"gpt-4\">GPT-4</option>\r\n//             <option value=\"gpt-4o\">GPT-4o</option>\r\n//             <option value=\"deepseek\">DeepSeek</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <button\r\n//           onClick={handleGenerate}\r\n//           disabled={loading || !title}\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n//         >\r\n//           {loading ? 'G√©n√©ration en cours...' : 'G√©n√©rer et Enregistrer'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {generated && (\r\n//         <div className=\"mt-6 border p-4 rounded shadow bg-green-50\">\r\n//           <h2 className=\"font-semibold text-lg\">Article g√©n√©r√©</h2>\r\n//           <p className=\"mt-2 whitespace-pre-line\">{generated.content}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"mt-10\">\r\n//         <h2 className=\"text-xl font-semibold mb-2\">Articles enregistr√©s</h2>\r\n//         {allContents.length === 0 ? (\r\n//           <p>Aucun article enregistr√©.</p>\r\n//         ) : (\r\n//           <ul className=\"space-y-4\">\r\n//             {allContents.map((item) => (\r\n//               <li key={item._id} className=\"border p-4 rounded shadow\">\r\n//                 <p><strong>Titre :</strong> {item.title}</p>\r\n//                 <p><strong>Style :</strong> {item.style}</p>\r\n//                 <p><strong>Longueur :</strong> {item.length}</p>\r\n//                 <p><strong>Fournisseur :</strong> {item.provider}</p>\r\n//                 <p className=\"mt-2 whitespace-pre-line\"><strong>Contenu :</strong> {item.content}</p>\r\n//                 <p className=\"text-sm text-gray-500 mt-1\">Cr√©√© le : {new Date(item.createdAt).toLocaleString()}</p>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useState } from 'react';\r\n// import {\r\n//   generateContent,\r\n//   saveContent,\r\n//   fetchContents,\r\n// } from '../api/route';\r\n\r\n// export default function GeneratePage() {\r\n//   const [title, setTitle] = useState('');\r\n//   const [style, setStyle] = useState('neutre');\r\n//   const [length, setLength] = useState('court');\r\n//   const [provider, setProvider] = useState('deepseek');\r\n//   const [content, setContent] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [savedContents, setSavedContents] = useState<any[]>([]);\r\n\r\n//   const generate = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const res = await generateContent({ title, style, length, provider });\r\n//       setContent(res.content);\r\n//     } catch {\r\n//       alert('Erreur lors de la g√©n√©ration');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       await saveContent({\r\n//         title,\r\n//         content: content,\r\n//         style: style,\r\n//         length,\r\n//         provider: provider,\r\n//       });\r\n//       alert('content enregistr√© avec succ√®s');\r\n//       loadSavedContents();\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert('Erreur enregistrement');\r\n//     }\r\n//   };\r\n\r\n//   const loadSavedContents = async () => {\r\n//     try {\r\n//       const data = await fetchContents();\r\n//       setSavedContents(data);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-8 max-w-5xl mx-auto\">\r\n//       <h1 className=\"text-3xl font-bold mb-6\">G√©n√©rer un conten</h1>\r\n\r\n//       <input\r\n//         value={title}\r\n//         onChange={(e) => setTitle(e.target.value)}\r\n//         placeholder=\"Titre\"\r\n//         className=\"w-full border p-2 mb-4 rounded\"\r\n//       />\r\n\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n        \r\n//         <select\r\n//           value={style}\r\n//           onChange={(e) => setStyle(e.target.value)}\r\n//           className=\" shadow appearance-none border p-2 rounded leading-tight focus:outline-none focus:shadow-outline\"\r\n//         >\r\n//            <option value=\"\">Standard</option>\r\n//             <option value=\"formal\">Formel</option>\r\n//             <option value=\"casual\">D√©contract√©</option>\r\n//             <option value=\"professional\">Professionnel</option>\r\n//             <option value=\"academic\">Acad√©mique</option>\r\n//             <option value=\"creative\">Cr√©atif</option>\r\n//             <option value=\"persuasive\">Persuasif</option>\r\n//             <option value=\"informative\">Informatif</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           value={length}\r\n//           onChange={(e) => setLength(e.target.value)}\r\n//           className=\"border p-2 rounded\"\r\n//         >\r\n//           <option value=\"court\">Court</option>\r\n//           <option value=\"moyen\">Moyen</option>\r\n//           <option value=\"long\">Long</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           value={provider}\r\n//           onChange={(e) => setProvider(e.target.value)}\r\n//           className=\"border p-2 rounded\"\r\n//         >\r\n//           <option value=\"deepseek\">DeepSeek</option>\r\n//           <option value=\"gpt-4\">GPT-4</option>\r\n//           <option value=\"mistral\">Mistral</option>\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div className=\"flex gap-4 mb-6\">\r\n//         <button\r\n//           onClick={generate}\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           {loading ? 'G√©n√©ration...' : 'G√©n√©rer'}\r\n//         </button>\r\n//         <button\r\n//           onClick={handleSave}\r\n//           className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Enregistrer\r\n//         </button>\r\n//         <button\r\n//           onClick={loadSavedContents}\r\n//           className=\"bg-gray-600 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           Voir les contens enregistr√©s\r\n//         </button>\r\n//       </div>\r\n\r\n//       {content && (\r\n//         <div className=\"bg-gray-100 p-4 rounded mb-6\">\r\n//           <h2 className=\"text-xl font-semibold mb-2\">{title}</h2>\r\n//           <p className=\"whitespace-pre-line\">{content}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {savedContents.length > 0 && (\r\n//         <div className=\"mt-10\">\r\n//           <h2 className=\"text-2xl font-bold mb-4\">contenus enregistr√©s</h2>\r\n//           <div className=\"space-y-4\">\r\n//             {savedContents.map((art) => (\r\n//               <div\r\n//                 key={art._id}\r\n//                 className=\"border p-4 rounded bg-white shadow\"\r\n//               >\r\n//                 <h3 className=\"text-lg font-semibold\">{art.title}</h3>\r\n//                 <p className=\"text-sm text-gray-600\">\r\n//                   Style : {art.style} | Longueur : {art.length} | Provider :{' '}\r\n//                   {art.provider}\r\n//                 </p>\r\n//                 <p className=\"mt-2 whitespace-pre-line\">{art.content}</p>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n// export default function CreateContentPage() {\r\n//   const router = useRouter();\r\n\r\n//   const [form, setForm] = useState({\r\n//     title: \"\",\r\n//     style: \"neutre\",\r\n//     length: \"court\",\r\n//     provider: \"gpt\",\r\n//     content: \"\",\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [saving, setSaving] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleGenerate = async () => {\r\n//     setLoading(true);\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:3003/api/content/generate\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({\r\n//           title: form.title,\r\n//           style: form.style,\r\n//           length: form.length,\r\n//           provider: form.provider,\r\n//         }),\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const message = await res.text();\r\n//         throw new Error(message);\r\n//       }\r\n\r\n//       const data = await res.json();\r\n//       setForm({ ...form, content: data.content });\r\n//     } catch (err: any) {\r\n//       setError(err.message || \"Erreur lors de la g√©n√©ration.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSave = async () => {\r\n//     if (!form.content) return;\r\n\r\n//     setSaving(true);\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:3003/api/content\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(form),\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const message = await res.text();\r\n//         throw new Error(message);\r\n//       }\r\n\r\n//       router.push(\"/content\");\r\n//     } catch (err: any) {\r\n//       setError(err.message || \"Erreur lors de l'enregistrement.\");\r\n//     } finally {\r\n//       setSaving(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-3xl mx-auto py-10 px-4\">\r\n//       <h1 className=\"text-2xl font-bold mb-6\">Cr√©er un nouveau contenu</h1>\r\n\r\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n//       <div className=\"mb-4\">\r\n//         <label className=\"block font-medium\">Titre</label>\r\n//         <input\r\n//           name=\"title\"\r\n//           type=\"text\"\r\n//           value={form.title}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border p-2 rounded\"\r\n//           required\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"mb-4 grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n//         <div>\r\n//           <label className=\"block font-medium\">Style</label>\r\n//           <select\r\n//             name=\"style\"\r\n//             value={form.style}\r\n//             onChange={handleChange}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"neutre\">Neutre</option>\r\n//             <option value=\"persuasif\">Persuasif</option>\r\n//             <option value=\"informatif\">Informatif</option>\r\n//             <option value=\"humoristique\">Humoristique</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-medium\">Longueur</label>\r\n//           <select\r\n//             name=\"length\"\r\n//             value={form.length}\r\n//             onChange={handleChange}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"court\">Court</option>\r\n//             <option value=\"moyen\">Moyen</option>\r\n//             <option value=\"long\">Long</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-medium\">Fournisseur IA</label>\r\n//           <select\r\n//             name=\"provider\"\r\n//             value={form.provider}\r\n//             onChange={handleChange}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"gpt\">GPT</option>\r\n//             <option value=\"deepseek\">DeepSeek</option>\r\n//             <option value=\"claude\">Claude</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <button\r\n//         onClick={handleGenerate}\r\n//         disabled={loading || !form.title}\r\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n//       >\r\n//         {loading ? \"G√©n√©ration...\" : \"G√©n√©rer le contenu\"}\r\n//       </button>\r\n\r\n//       {form.content && (\r\n//         <>\r\n//           <div className=\"mt-6\">\r\n//             <label className=\"block font-medium mb-2\">Contenu g√©n√©r√©</label>\r\n//             <textarea\r\n//               value={form.content}\r\n//               readOnly\r\n//               rows={10}\r\n//               className=\"w-full border p-2 rounded\"\r\n//             />\r\n//           </div>\r\n\r\n//           <button\r\n//             onClick={handleSave}\r\n//             disabled={saving}\r\n//             className=\"mt-4 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 disabled:opacity-50\"\r\n//           >\r\n//             {saving ? \"Enregistrement...\" : \"Enregistrer dans la base\"}\r\n//           </button>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// 'use client';\r\n\r\n// import { useState } from 'react';\r\n// import { useRouter } from 'next/navigation';\r\n// import LoadingSpinner from '@/app/components/LoadingSpinner';\r\n\r\n// export default function CreateContentPage() {\r\n//   const router = useRouter();\r\n//   const [title, setTitle] = useState('');\r\n//   const [style, setStyle] = useState('professional');\r\n//   const [length, setLength] = useState('500'); // par d√©faut 500 mots\r\n//   const [provider, setProvider] = useState('OPENAI');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleGenerate = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError('');\r\n\r\n//     try {\r\n//       const res = await fetch('http://localhost:3003/api/content/generate', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({\r\n//           title,\r\n//           style,\r\n//           length: Number(length), // conversion explicite\r\n//           provider: provider,\r\n//         }),\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const errorText = await res.text();\r\n//         throw new Error(errorText || 'Erreur lors de la g√©n√©ration du contenu');\r\n//       }\r\n\r\n//       const saved = await res.json();\r\n//       router.push(`/content/read/${saved._id}`);\r\n//     } catch (err: any) {\r\n//       setError(err.message || 'Erreur inconnue');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-2xl mx-auto p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Cr√©er un contenu</h1>\r\n//       <form onSubmit={handleGenerate} className=\"space-y-4\">\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Titre</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             required\r\n//             className=\"w-full border p-2 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Style</label>\r\n//           <select\r\n//             value={style}\r\n//             onChange={(e) => setStyle(e.target.value)}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//              <option value=\"\">Standard</option>\r\n//             <option value=\"formal\">Formel</option>\r\n//             <option value=\"casual\">D√©contract√©</option>\r\n//             <option value=\"professional\">Professionnel</option>\r\n//             <option value=\"academic\">Acad√©mique</option>\r\n//             <option value=\"creative\">Cr√©atif</option>\r\n//             <option value=\"persuasive\">Persuasif</option>\r\n//             <option value=\"informative\">Informatif</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Longueur (en mots)</label>\r\n//           <select\r\n//             value={length}\r\n//             onChange={(e) => setLength(e.target.value)}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"300\">300 mots</option>\r\n//             <option value=\"500\">500 mots</option>\r\n//             <option value=\"800\">800 mots</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Mod√®le IA</label>\r\n//           <select\r\n//             value={provider}\r\n//             onChange={(e) => setProvider(e.target.value)}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"OPENAI\">OpenAI</option>\r\n//             <option value=\"DEEPSEEK\">DeepSeek</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={loading}\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           {loading ? <LoadingSpinner /> : 'G√©n√©rer le contenu'}\r\n//         </button>\r\n\r\n//         {error && <p className=\"text-red-500\">‚ùå {error}</p>}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"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","debugId":null}}]
}