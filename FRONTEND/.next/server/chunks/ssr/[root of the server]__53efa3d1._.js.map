{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/contexts/authContext.tsx"],"sourcesContent":["// context/AuthContext.tsx\r\n\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Définir les types\r\ntype User = {\r\n  _id: string;\r\n  username: string;\r\n  email: string;\r\n};\r\n\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n};\r\n\r\n// Créer le contexte\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// API URL\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000/api\";\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Vérifier si l'utilisateur est déjà connecté au chargement\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n          const response = await axios.get(`${API_URL}/auth/profile`);\r\n          setUser(response.data);\r\n        }\r\n      } catch (error) {\r\n        localStorage.removeItem(\"token\");\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Fonction de connexion\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, {\r\n        email,\r\n        password,\r\n      });\r\n      \r\n      const { access_token, user } = response.data;\r\n      localStorage.setItem(\"token\", access_token);\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\r\n      setUser(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Fonction d'inscription\r\n  const register = async (username: string, email: string, password: string) => {\r\n    try {\r\n      await axios.post(`${API_URL}/auth/register`, {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Fonction de déconnexion\r\n  const logout = async () => {\r\n    localStorage.removeItem(\"token\");\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n// Hook personnalisé pour utiliser le contexte\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth doit être utilisé dans un AuthProvider\");\r\n  }\r\n  return context;\r\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAG1B;AACA;AAHA;;;;AAoBA,oBAAoB;AACpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAE/D,UAAU;AACV,MAAM,UAAU,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAE5C,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,QAAQ,aAAa,OAAO,CAAC;gBACnC,IAAI,OAAO;oBACT,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;oBAClE,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,aAAa,CAAC;oBAC1D,QAAQ,SAAS,IAAI;gBACvB;YACF,EAAE,OAAO,OAAO;gBACd,aAAa,UAAU,CAAC;gBACxB,OAAO,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;YACvD,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,wBAAwB;IACxB,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,WAAW,CAAC,EAAE;gBACzD;gBACA;YACF;YAEA,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,SAAS,IAAI;YAC5C,aAAa,OAAO,CAAC,SAAS;YAC9B,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,cAAc;YACzE,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,yBAAyB;IACzB,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,IAAI;YACF,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,cAAc,CAAC,EAAE;gBAC3C;gBACA;gBACA;YACF;QACF,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,0BAA0B;IAC1B,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,OAAO,qIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACrD,QAAQ;IACV;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;IACF;IAEA,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAGO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/auth/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/app/contexts/authContext';\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  // const { login, isLoading } = useAuth();\r\n  const { login, loading } = useAuth(); \r\n  const router = useRouter();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await login(email, password);\r\n    } catch (err) {\r\n      setError('Email ou mot de passe incorrect');\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div>Chargement...</div>;\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h1>Connexion</h1>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Mot de passe\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Connexion...' : 'Se connecter'}\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Pas de compte ? <Link href=\"/auth/register\">S'inscrire</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,0CAA0C;IAC1C,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACjC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,MAAM,OAAO;QACrB,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,IAAI,WAAW,qBAAO,8OAAC;kBAAI;;;;;;IAE3B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAG;;;;;;YACH,uBAAS,8OAAC;gBAAE,WAAU;0BAAS;;;;;;0BAChC,8OAAC;gBAAK,UAAU;;kCACd,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,aAAY;wBACZ,QAAQ;;;;;;kCAEV,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,aAAY;wBACZ,QAAQ;;;;;;kCAEV,8OAAC;wBAAO,MAAK;wBAAS,UAAU;kCAC7B,YAAY,iBAAiB;;;;;;;;;;;;0BAGlC,8OAAC;;oBAAE;kCACe,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAiB;;;;;;;;;;;;;;;;;;AAIpD","debugId":null}}]
}