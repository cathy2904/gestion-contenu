{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/components/EditPostForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/EditPostForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/EditPostForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/components/EditPostForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/EditPostForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/EditPostForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/post/edit/%5Bid%5D/page.tsx"],"sourcesContent":["import EditPostForm from \"../../../components/EditPostForm\";\n\n\nexport default function EditPage({ params }: { params: { id: string } }) {\n  return (\n    <div>\n      <h1>Édition du Post</h1>\n      <EditPostForm id={params.id} />\n    </div>\n  );\n}\n\n\n// async function getPost(id: string) {\n//   const res = await fetch(`http://localhost:3003/api/posts/${id}`, {\n//     cache: \"no-store\",\n//   });\n\n//   if (!res.ok) {\n//     throw new Error(\"Erreur lors de la récupération du post\");\n//   }\n\n//   return res.json();\n// }\n\n// export default async function EditPostPage({ params }: { params: { id: string } }) {\n//   // const post = await getPost(params.id);\n\n//   return ( \n//   <div> \n//     <EditPostForm postId={params.id} />\n//   </div>\n//   );\n// }\n\n\n\n// 'use client';\n\n// import { useRouter, useParams } from 'next/navigation';\n// import { useState, useEffect } from 'react';\n// import { getPost, updatePost } from '../../service/api';\n// import EditPostForm from '@/app/components/EditPostForm';\n// import Link from 'next/link';\n\n// export default function EditPostPage() {\n//   const router = useRouter();\n//   const { id } = useParams();\n//   const postId = Array.isArray(id) ? id[0] : id;\n//   const [post, setPost] = useState<any>(null);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [error, setError] = useState<string | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const fetchPost = async () => {\n//     if (!postId) return;\n//     try {\n//       setIsLoading(true);\n//       const response = await getPost(postId);\n//       setPost(response.data);\n//     } catch (err) {\n//       setError('Erreur lors du chargement du post');\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const onSubmit = async (formData: FormData) => {\n//     try {\n//       setIsSubmitting(true);\n//       setError(null);\n//       await updatePost(id as string, formData);\n//       router.push('/post');\n//     } catch (err) {\n//       setError('Erreur lors de la mise à jour du post');\n//       console.error(err);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPost();\n//   }, [id]);\n\n//   if (isLoading) {\n//     return (\n//       <div className=\"flex justify-center items-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n//         <strong className=\"font-bold\">Erreur ! </strong>\n//         <span className=\"block sm:inline\">{error}</span>\n//       </div>\n//     );\n//   }\n\n//   if (!post) {\n//     return (\n//       <div className=\"bg-white p-8 rounded-lg shadow text-center\">\n//         <p className=\"text-gray-500\">Post non trouvé</p>\n//         <Link \n//           href=\"/posts\"\n//           className=\"inline-block mt-4 text-blue-600 hover:text-blue-800\"\n//         >\n//           Retour à la liste\n//         </Link>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"container mx-auto px-4 py-8\">\n//       <div className=\"mb-8\">\n//         <h1 className=\"text-3xl font-bold text-gray-800\">Modifier le Post</h1>\n//         <p className=\"text-gray-600 mt-2\">Modifiez les champs nécessaires</p>\n//       </div>\n\n//       {error && (\n//         <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\n//           {error}\n//         </div>\n//       )}\n\n//       <EditPostForm onSubmit={onSubmit} initialData={post} isSubmitting={isSubmitting} />\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import { useRouter } from 'next/router';\n// import { useState, useEffect } from 'react';\n// import { getPost, updatePost } from '../../service/api';\n// import PostForm from '@/app/components/PostForm';\n\n// export default function EditPostPage() {\n//   const router = useRouter();\n//   const { id } = router.query;\n//   const [post, setPost] = useState<any>(null);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [error, setError] = useState<string | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const fetchPost = async () => {\n//     if (!id) return;\n//     try {\n//       setIsLoading(true);\n//       const response = await getPost(id as string);\n//       setPost(response.data);\n//     } catch (err) {\n//       setError('Erreur lors du chargement du post');\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const onSubmit = async (data: any) => {\n//     try {\n//       setIsSubmitting(true);\n//       setError(null);\n//       await updatePost(id as string, data);\n//       router.push('/posts');\n//     } catch (err) {\n//       setError('Erreur lors de la mise à jour du post');\n//       console.error(err);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPost();\n//   }, [id]);\n\n//   if (isLoading) return <div className=\"text-center py-8\">Chargement...</div>;\n//   if (error) return <div className=\"text-center py-8 text-red-500\">{error}</div>;\n//   if (!post) return <div className=\"text-center py-8\">Post non trouvé</div>;\n\n//   return (\n//     <div className=\"container mx-auto px-4 py-8\">\n//       <div className=\"flex items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold\">Modifier le Post</h1>\n//       </div>\n\n//       {error && (\n//         <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n//           {error}\n//         </div>\n//       )}\n\n//       <PostForm onSubmit={onSubmit} initialData={post} isSubmitting={isSubmitting} />\n//     </div>\n//   );\n// }\n// \"use client\"\n// import React, {useState,useEffect } from 'react'\n// import { useRouter } from 'next/navigation'\n// import { fetcher } from '@/app/libs'\n// import useSWR from 'swr'\n// export default function PostEdit({params} :{params:{id:number}}) {\n//   const router = useRouter()\n//   const {data : post,isLoading, error} = useSWR(`/api/posts/${params.id}`,fetcher)\n//   const [title, setTitle] =useState<string>('');\n//   const [body, setBody] = useState<string>('');\n//   useEffect(()=>{\n//      if(post){\n//          setTitle(post.result.title)\n//          setBody(post.result.content)\n//      }\n//   },[post, isLoading])\n//   const updatePost = async (e: any) => {\n//     e.preventDefault()\n//     if (title!=\"\" && body!=\"\") {\n//       const formData = {\n//           title: title,\n//           content: body\n//       }\n//       const res = await fetch(`/api/posts/${params.id}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n//       const content = await res.json();\n//       if(content.success>0)\n//       {\n//         router.push('/post');\n//       }\n      \n//     }\n//   };\n//   if(isLoading) return <div><span>Loading...</span></div>\n//   if (!post) return null;\n//   return (\n//     <form className='w-full' onSubmit={updatePost}>\n//         <span className='font-bold text-yellow-500 py-2 block underline text-2xl'>Form Add</span>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Title</label>\n//              <input type='text' name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' value={title} onChange={(e:any)=>setTitle(e.target.value)}/>\n//         </div>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Content</label>\n//              <textarea name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' value={body} onChange={(e:any)=>setBody(e.target.value)} />\n//         </div>\n//         <div className='w-full py-2'>\n//           <button className=\"w-20 p-2 text-white border-gray-200 border-[1px] rounded-sm bg-green-400\">Submit</button>\n//         </div>\n//     </form>\n//   )\n// }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA;YAAA,OAAwB;gBAAsB,EAAC,UAAA;oBAAA;oBAAA;wBAEzG,YAAA;4BAAA;4BAAA,uCAA4D;gCAC5D,OAAO,KAAA;oCAAMC;oCAAAA,EAAc,IAAIX,mBAAmB;qCAChDY,YAAY;8CACVC,IAAAA,CAAMZ,CAAAA;wCAAAA,KAAUa,GAAAA;4CAAAA,IAAQ;4CAAA;yCAAA;;uCACxBC,MAAM;;iCACNC,UAAU;sCACV,IAAA,CAAA;4BAAA;yBAAA,gCAA2C;;yBAC3CC,YAAY;8BACZC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA;;iBACVC,UAAU,EAAE;kBACd,QAAA,CAAA;YAAA;SAAA;;KACAC,UAAU;cACRC,IAAAA;YAAAA,GAAYnB,GAAAA;gBACd,OAAA,QAAA;wBAAA;4BACA,KAAA,CAAA,GAAA,4MAAA,CAAA,sBAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,+RAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA","ignoreList":[0],"debugId":null}}]
}