{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/ui/color-mode.tsx"],"sourcesContent":["\"use client\"\r\n\r\n// import type { IconButtonProps } from \"@chakra-ui/react\"\r\n// import { ClientOnly, IconButton, Skeleton } from \"@chakra-ui/react\"\r\nimport { ThemeProvider, useTheme } from \"next-themes\"\r\nimport type { ThemeProviderProps } from \"next-themes\"\r\nimport * as React from \"react\"\r\nimport { LuMoon, LuSun } from \"react-icons/lu\"\r\n\r\n\r\nexport function ColorModeProvider(props: ThemeProviderProps) {\r\n  return (\r\n    <ThemeProvider attribute=\"class\" disableTransitionOnChange {...props} />\r\n  )\r\n}\r\n\r\nexport function useColorMode() {\r\n  const { resolvedTheme, setTheme } = useTheme()\r\n  const toggleColorMode = () => {\r\n    setTheme(resolvedTheme === \"light\" ? \"dark\" : \"light\")\r\n  }\r\n  return {\r\n    colorMode: resolvedTheme,\r\n    setColorMode: setTheme,\r\n    toggleColorMode,\r\n  }\r\n}\r\n\r\nexport function useColorModeValue<T>(light: T, dark: T) {\r\n  const { colorMode } = useColorMode()\r\n  return colorMode === \"light\" ? light : dark\r\n}\r\n\r\nexport function ColorModeIcon() {\r\n  const { colorMode } = useColorMode()\r\n  return colorMode === \"light\" ? <LuSun /> : <LuMoon />\r\n}\r\n\r\n\r\n// export const ColorModeButton = React.forwardRef<\r\n//   HTMLButtonElement,\r\n//   ThemeProviderProps\r\n// >(function ColorModeButton(props, ref) {\r\n//   const { toggleColorMode } = useColorMode()\r\n//   return (\r\n//     <ClientOnly fallback={<Skeleton boxSize=\"8\" />}>\r\n//       <IconButton\r\n//         onClick={toggleColorMode}\r\n//         variant=\"ghost\"\r\n//         aria-label=\"Toggle color mode\"\r\n//         size=\"sm\"\r\n//         ref={ref}\r\n//         {...props}\r\n//         css={{\r\n//           _icon: {\r\n//             width: \"5\",\r\n//             height: \"5\",\r\n//           },\r\n//         }}\r\n//       >\r\n//         <ColorModeIcon />\r\n//       </IconButton>\r\n//     </ClientOnly>\r\n//   )\r\n// })\r\n"],"names":[],"mappings":";;;;;;;AAEA,0DAA0D;AAC1D,sEAAsE;AACtE;AAGA;AAPA;;;;AAUO,SAAS,kBAAkB,KAAyB;IACzD,qBACE,8OAAC,gJAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;QAAE,GAAG,KAAK;;;;;;AAExE;AAEO,SAAS;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,kBAAkB;QACtB,SAAS,kBAAkB,UAAU,SAAS;IAChD;IACA,OAAO;QACL,WAAW;QACX,cAAc;QACd;IACF;AACF;AAEO,SAAS,kBAAqB,KAAQ,EAAE,IAAO;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,UAAU,QAAQ;AACzC;AAEO,SAAS;IACd,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,wBAAU,8OAAC,8IAAA,CAAA,QAAK;;;;6BAAM,8OAAC,8IAAA,CAAA,SAAM;;;;;AACpD,EAGA,mDAAmD;CACnD,uBAAuB;CACvB,uBAAuB;CACvB,2CAA2C;CAC3C,+CAA+C;CAC/C,aAAa;CACb,uDAAuD;CACvD,oBAAoB;CACpB,oCAAoC;CACpC,0BAA0B;CAC1B,yCAAyC;CACzC,oBAAoB;CACpB,oBAAoB;CACpB,qBAAqB;CACrB,iBAAiB;CACjB,qBAAqB;CACrB,0BAA0B;CAC1B,2BAA2B;CAC3B,eAAe;CACf,aAAa;CACb,UAAU;CACV,4BAA4B;CAC5B,sBAAsB;CACtB,oBAAoB;CACpB,MAAM;CACN,KAAK","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/ui/provider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { ChakraProvider, defaultSystem } from \"@chakra-ui/react\"\r\nimport type { ThemeProviderProps } from \"next-themes\"\r\nimport {\r\n  ColorModeProvider,\r\n  // type ColorModeProviderProps,\r\n} from \"./color-mode\"\r\n\r\nexport function Provider(props: ThemeProviderProps) {\r\n  return (\r\n    <ChakraProvider value={defaultSystem}>\r\n      <ColorModeProvider {...props} />\r\n    </ChakraProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAEA;AAJA;;;;AASO,SAAS,SAAS,KAAyB;IAChD,qBACE,8OAAC,sLAAA,CAAA,iBAAc;QAAC,OAAO,gKAAA,CAAA,gBAAa;kBAClC,cAAA,8OAAC,kIAAA,CAAA,oBAAiB;YAAE,GAAG,KAAK;;;;;;;;;;;AAGlC","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/ui/button.tsx"],"sourcesContent":["import type { ButtonProps as ChakraButtonProps } from \"@chakra-ui/react\"\r\nimport {\r\n  AbsoluteCenter,\r\n  Button as ChakraButton,\r\n  Span,\r\n  Spinner,\r\n} from \"@chakra-ui/react\"\r\nimport * as React from \"react\"\r\n\r\ninterface ButtonLoadingProps {\r\n  loading?: boolean\r\n  loadingText?: React.ReactNode\r\n}\r\n\r\nexport interface ButtonProps extends ChakraButtonProps, ButtonLoadingProps {}\r\n\r\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  function Button(props, ref) {\r\n    const { loading, disabled, loadingText, children, ...rest } = props\r\n    return (\r\n      <ChakraButton disabled={loading || disabled} ref={ref} {...rest}>\r\n        {loading && !loadingText ? (\r\n          <>\r\n            <AbsoluteCenter display=\"inline-flex\">\r\n              <Spinner size=\"inherit\" color=\"inherit\" />\r\n            </AbsoluteCenter>\r\n            <Span opacity={0}>{children}</Span>\r\n          </>\r\n        ) : loading && loadingText ? (\r\n          <>\r\n            <Spinner size=\"inherit\" color=\"inherit\" />\r\n            {loadingText}\r\n          </>\r\n        ) : (\r\n          children\r\n        )}\r\n      </ChakraButton>\r\n    )\r\n  },\r\n)\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAMA;;;;AASO,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACnC,SAAS,OAAO,KAAK,EAAE,GAAG;IACxB,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG;IAC9D,qBACE,8OAAC,wLAAA,CAAA,SAAY;QAAC,UAAU,WAAW;QAAU,KAAK;QAAM,GAAG,IAAI;kBAC5D,WAAW,CAAC,4BACX;;8BACE,8OAAC,oMAAA,CAAA,iBAAc;oBAAC,SAAQ;8BACtB,cAAA,8OAAC,0LAAA,CAAA,UAAO;wBAAC,MAAK;wBAAU,OAAM;;;;;;;;;;;8BAEhC,8OAAC,mLAAA,CAAA,OAAI;oBAAC,SAAS;8BAAI;;;;;;;2BAEnB,WAAW,4BACb;;8BACE,8OAAC,0LAAA,CAAA,UAAO;oBAAC,MAAK;oBAAU,OAAM;;;;;;gBAC7B;;2BAGH;;;;;;AAIR","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/ui/menu.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { AbsoluteCenter, Menu as ChakraMenu, Portal } from \"@chakra-ui/react\"\r\nimport * as React from \"react\"\r\nimport { LuCheck, LuChevronRight } from \"react-icons/lu\"\r\n\r\ninterface MenuContentProps extends ChakraMenu.ContentProps {\r\n  portalled?: boolean\r\n  portalRef?: React.RefObject<HTMLElement>\r\n}\r\n\r\nexport const MenuContent = React.forwardRef<HTMLDivElement, MenuContentProps>(\r\n  function MenuContent(props, ref) {\r\n    const { portalled = true, portalRef, ...rest } = props\r\n    return (\r\n      <Portal disabled={!portalled} container={portalRef}>\r\n        <ChakraMenu.Positioner>\r\n          <ChakraMenu.Content ref={ref} {...rest} />\r\n        </ChakraMenu.Positioner>\r\n      </Portal>\r\n    )\r\n  },\r\n)\r\n\r\nexport const MenuArrow = React.forwardRef<\r\n  HTMLDivElement,\r\n  ChakraMenu.ArrowProps\r\n>(function MenuArrow(props, ref) {\r\n  return (\r\n    <ChakraMenu.Arrow ref={ref} {...props}>\r\n      <ChakraMenu.ArrowTip />\r\n    </ChakraMenu.Arrow>\r\n  )\r\n})\r\n\r\nexport const MenuCheckboxItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  ChakraMenu.CheckboxItemProps\r\n>(function MenuCheckboxItem(props, ref) {\r\n  return (\r\n    <ChakraMenu.CheckboxItem ref={ref} {...props}>\r\n      <ChakraMenu.ItemIndicator hidden={false}>\r\n        <LuCheck />\r\n      </ChakraMenu.ItemIndicator>\r\n      {props.children}\r\n    </ChakraMenu.CheckboxItem>\r\n  )\r\n})\r\n\r\nexport const MenuRadioItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  ChakraMenu.RadioItemProps\r\n>(function MenuRadioItem(props, ref) {\r\n  const { children, ...rest } = props\r\n  return (\r\n    <ChakraMenu.RadioItem ps=\"8\" ref={ref} {...rest}>\r\n      <AbsoluteCenter axis=\"horizontal\" left=\"4\" asChild>\r\n        <ChakraMenu.ItemIndicator>\r\n          <LuCheck />\r\n        </ChakraMenu.ItemIndicator>\r\n      </AbsoluteCenter>\r\n      <ChakraMenu.ItemText>{children}</ChakraMenu.ItemText>\r\n    </ChakraMenu.RadioItem>\r\n  )\r\n})\r\n\r\nexport const MenuItemGroup = React.forwardRef<\r\n  HTMLDivElement,\r\n  ChakraMenu.ItemGroupProps\r\n>(function MenuItemGroup(props, ref) {\r\n  const { title, children, ...rest } = props\r\n  return (\r\n    <ChakraMenu.ItemGroup ref={ref} {...rest}>\r\n      {title && (\r\n        <ChakraMenu.ItemGroupLabel userSelect=\"none\">\r\n          {title}\r\n        </ChakraMenu.ItemGroupLabel>\r\n      )}\r\n      {children}\r\n    </ChakraMenu.ItemGroup>\r\n  )\r\n})\r\n\r\nexport interface MenuTriggerItemProps extends ChakraMenu.ItemProps {\r\n  startIcon?: React.ReactNode\r\n}\r\n\r\nexport const MenuTriggerItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  MenuTriggerItemProps\r\n>(function MenuTriggerItem(props, ref) {\r\n  const { startIcon, children, ...rest } = props\r\n  return (\r\n    <ChakraMenu.TriggerItem ref={ref} {...rest}>\r\n      {startIcon}\r\n      {children}\r\n      <LuChevronRight />\r\n    </ChakraMenu.TriggerItem>\r\n  )\r\n})\r\n\r\nexport const MenuRadioItemGroup = ChakraMenu.RadioItemGroup\r\nexport const MenuContextTrigger = ChakraMenu.ContextTrigger\r\nexport const MenuRoot = ChakraMenu.Root\r\nexport const MenuSeparator = ChakraMenu.Separator\r\n\r\nexport const MenuItem = ChakraMenu.Item\r\nexport const MenuItemText = ChakraMenu.ItemText\r\nexport const MenuItemCommand = ChakraMenu.ItemCommand\r\nexport const MenuTrigger = ChakraMenu.Trigger\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AACA;AACA;AAJA;;;;;AAWO,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACxC,SAAS,YAAY,KAAK,EAAE,GAAG;IAC7B,MAAM,EAAE,YAAY,IAAI,EAAE,SAAS,EAAE,GAAG,MAAM,GAAG;IACjD,qBACE,8OAAC,8KAAA,CAAA,SAAM;QAAC,UAAU,CAAC;QAAW,WAAW;kBACvC,cAAA,8OAAC,yNAAA,CAAA,OAAU,CAAC,UAAU;sBACpB,cAAA,8OAAC,yNAAA,CAAA,OAAU,CAAC,OAAO;gBAAC,KAAK;gBAAM,GAAG,IAAI;;;;;;;;;;;;;;;;AAI9C;AAGK,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,SAAS,UAAU,KAAK,EAAE,GAAG;IAC7B,qBACE,8OAAC,yNAAA,CAAA,OAAU,CAAC,KAAK;QAAC,KAAK;QAAM,GAAG,KAAK;kBACnC,cAAA,8OAAC,yNAAA,CAAA,OAAU,CAAC,QAAQ;;;;;;;;;;AAG1B;AAEO,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG7C,SAAS,iBAAiB,KAAK,EAAE,GAAG;IACpC,qBACE,8OAAC,yNAAA,CAAA,OAAU,CAAC,YAAY;QAAC,KAAK;QAAM,GAAG,KAAK;;0BAC1C,8OAAC,yNAAA,CAAA,OAAU,CAAC,aAAa;gBAAC,QAAQ;0BAChC,cAAA,8OAAC,8IAAA,CAAA,UAAO;;;;;;;;;;YAET,MAAM,QAAQ;;;;;;;AAGrB;AAEO,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1C,SAAS,cAAc,KAAK,EAAE,GAAG;IACjC,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG;IAC9B,qBACE,8OAAC,yNAAA,CAAA,OAAU,CAAC,SAAS;QAAC,IAAG;QAAI,KAAK;QAAM,GAAG,IAAI;;0BAC7C,8OAAC,oMAAA,CAAA,iBAAc;gBAAC,MAAK;gBAAa,MAAK;gBAAI,OAAO;0BAChD,cAAA,8OAAC,yNAAA,CAAA,OAAU,CAAC,aAAa;8BACvB,cAAA,8OAAC,8IAAA,CAAA,UAAO;;;;;;;;;;;;;;;0BAGZ,8OAAC,yNAAA,CAAA,OAAU,CAAC,QAAQ;0BAAE;;;;;;;;;;;;AAG5B;AAEO,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1C,SAAS,cAAc,KAAK,EAAE,GAAG;IACjC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG;IACrC,qBACE,8OAAC,yNAAA,CAAA,OAAU,CAAC,SAAS;QAAC,KAAK;QAAM,GAAG,IAAI;;YACrC,uBACC,8OAAC,yNAAA,CAAA,OAAU,CAAC,cAAc;gBAAC,YAAW;0BACnC;;;;;;YAGJ;;;;;;;AAGP;AAMO,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,SAAS,gBAAgB,KAAK,EAAE,GAAG;IACnC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,MAAM,GAAG;IACzC,qBACE,8OAAC,yNAAA,CAAA,OAAU,CAAC,WAAW;QAAC,KAAK;QAAM,GAAG,IAAI;;YACvC;YACA;0BACD,8OAAC,8IAAA,CAAA,iBAAc;;;;;;;;;;;AAGrB;AAEO,MAAM,qBAAqB,yNAAA,CAAA,OAAU,CAAC,cAAc;AACpD,MAAM,qBAAqB,yNAAA,CAAA,OAAU,CAAC,cAAc;AACpD,MAAM,WAAW,yNAAA,CAAA,OAAU,CAAC,IAAI;AAChC,MAAM,gBAAgB,yNAAA,CAAA,OAAU,CAAC,SAAS;AAE1C,MAAM,WAAW,yNAAA,CAAA,OAAU,CAAC,IAAI;AAChC,MAAM,eAAe,yNAAA,CAAA,OAAU,CAAC,QAAQ;AACxC,MAAM,kBAAkB,yNAAA,CAAA,OAAU,CAAC,WAAW;AAC9C,MAAM,cAAc,yNAAA,CAAA,OAAU,CAAC,OAAO","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/MenuNav.tsx"],"sourcesContent":["\"use client\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { GoChevronDown } from \"react-icons/go\";\r\nimport {\r\n  MenuContent,\r\n  MenuItem,\r\n  MenuRoot,\r\n  MenuTrigger,\r\n} from \"@/components/ui/menu\"\r\nimport { MenuType } from \"@/data/type\";\r\nimport Link from \"next/link\";\r\n\r\nexport const MenuNav = ({menus}: {menus:MenuType[]}) => {\r\n  \r\n  return (<>\r\n    {menus.map((men, index)=>(\r\n        <MenuRoot key={index}>\r\n        <MenuTrigger asChild>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            {men.title} <GoChevronDown />\r\n          </Button>\r\n        </MenuTrigger>\r\n        <MenuContent>\r\n            {men.menu.map((part, key)=>(\r\n                <MenuItem key={key} value={part.value}><Link href={part.link}>{part.titre} </Link></MenuItem>\r\n\r\n            ))}\r\n          {/* <MenuItem value=\"new-file\">Mon abonnement</MenuItem>\r\n          <MenuItem value=\"new-win\">Voir les offres</MenuItem>\r\n          <MenuItem value=\"open-file\">Se deconnecter</MenuItem> */}\r\n        </MenuContent>\r\n      </MenuRoot>\r\n    ))}\r\n    \r\n    </>)\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAOA;AAVA;;;;;;AAYO,MAAM,UAAU,CAAC,EAAC,KAAK,EAAqB;IAEjD,qBAAQ;kBACL,MAAM,GAAG,CAAC,CAAC,KAAK,sBACb,8OAAC,yHAAA,CAAA,WAAQ;;kCACT,8OAAC,yHAAA,CAAA,cAAW;wBAAC,OAAO;kCAClB,cAAA,8OAAC,2HAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,MAAK;;gCAC5B,IAAI,KAAK;gCAAC;8CAAC,8OAAC,8IAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;kCAG9B,8OAAC,yHAAA,CAAA,cAAW;kCACP,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,oBACjB,8OAAC,yHAAA,CAAA,WAAQ;gCAAW,OAAO,KAAK,KAAK;0CAAE,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAM,KAAK,IAAI;;wCAAG,KAAK,KAAK;wCAAC;;;;;;;+BAA3D;;;;;;;;;;;eARR;;;;;;AAmBvB","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/contexts/authProvider.tsx"],"sourcesContent":["'use client';\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { setCookie, deleteCookie } from 'cookies-next';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:3003/api/users/profile', {\r\n          credentials: 'include'\r\n        });\r\n        if (res.ok) setUser(await res.json());\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const res = await fetch('http://localhost:3003/api/auth/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({  email: email.trim(),\r\n        password: password  }),\r\n      credentials: 'include'\r\n    });\r\n    if (!res.ok) throw new Error('Login failed');\r\n    setUser(await res.json());\r\n    router.push('/');\r\n    const data = await res.json();\r\n  console.log('Login response:', data); // Vérifiez la structure\r\n  setUser({\r\n    id: data.user.id,\r\n    username: data.user.username, \r\n    email: data.user.email\r\n  });\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    const res = await fetch('http://localhost:3003/api/auth/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, email, password }),\r\n      credentials: 'include'\r\n    });\r\n    if (!res.ok) throw new Error('Registration failed');\r\n    await login(email, password);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch('http://localhost:3003/api/auth/logout', { \r\n      method: 'POST',\r\n      credentials: 'include'\r\n    });\r\n    deleteCookie('token');\r\n    setUser(null);\r\n    router.push('/auth/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth doit être utilisé à l\\intérieur de AuthProvider');\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAHA;;;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA0B;AAEnD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,2CAA2C;oBACjE,aAAa;gBACf;gBACA,IAAI,IAAI,EAAE,EAAE,QAAQ,MAAM,IAAI,IAAI;YACpC,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,MAAM,MAAM,MAAM,MAAM,wCAAwC;YAC9D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAG,OAAO,MAAM,IAAI;gBACvC,UAAU;YAAU;YACtB,aAAa;QACf;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,QAAQ,MAAM,IAAI,IAAI;QACtB,OAAO,IAAI,CAAC;QACZ,MAAM,OAAO,MAAM,IAAI,IAAI;QAC7B,QAAQ,GAAG,CAAC,mBAAmB,OAAO,wBAAwB;QAC9D,QAAQ;YACN,IAAI,KAAK,IAAI,CAAC,EAAE;YAChB,UAAU,KAAK,IAAI,CAAC,QAAQ;YAC5B,OAAO,KAAK,IAAI,CAAC,KAAK;QACxB;IACA;IAEA,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,MAAM,MAAM,MAAM,MAAM,2CAA2C;YACjE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;gBAAO;YAAS;YACjD,aAAa;QACf;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,MAAM,OAAO;IACrB;IAEA,MAAM,SAAS;QACb,MAAM,MAAM,yCAAyC;YACnD,QAAQ;YACR,aAAa;QACf;QACA,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE;QACb,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;YAAU;QAAO;kBACnE;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}}]
}