{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/api/posts/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n// export async function GET(request : NextRequest,{ params }: { params: { id: number } }) {\n//   const res = await fetch(process.env.PATH_URL_BACKEND+`/api/posts/${params.id}`, {\n//     next: { revalidate: 10 } ,\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   })\n//   const result = await res.json()\n//   return NextResponse.json(result)\n// }\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const { id } = params;\n    \n    if (!id) {\n      return NextResponse.json(\n        { message: 'ID de l\\article manquant' },\n        { status: 400 }\n      );\n    }\n\n    const res = await fetch(`${process.env.PATH_URL_BACKEND}/api/posts/${id}`);\n    \n    if (!res.ok) {\n      throw new Error('Article non trouvé');\n    }\n\n    const data = await res.json();\n    return NextResponse.json(data);\n\n  } catch (error) {\n    return NextResponse.json(\n      { message: 'Erreur lors de la récupération de l\\article' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PUT(request: NextRequest,{ params }: { params: { id: number } }) {\n  const body = await request.json()\n  const res = await fetch(process.env.PATH_URL_BACKEND+`/api/posts/${params.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  })\n  const data = await res.json();\n  return NextResponse.json(data)\n\n}\nexport async function DELETE(request: NextRequest,{ params }: { params: { id: number } }) {\n  const res = await fetch(process.env.PATH_URL_BACKEND+`/api/posts/${params.id}`, {\n    next: { revalidate: 10 },\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await res.json();\n  return NextResponse.json(data)\n\n}\n "],"names":[],"mappings":";;;;;AAAA;;AAYO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG;QAEf,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA2B,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI;QAEzE,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA8C,GACzD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IAAI,OAAoB,EAAC,EAAE,MAAM,EAA8B;IACnF,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,MAAM,MAAM,MAAM,QAAQ,GAAG,CAAC,gBAAgB,GAAC,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,EAAE;QAC9E,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAE3B;AACO,eAAe,OAAO,OAAoB,EAAC,EAAE,MAAM,EAA8B;IACtF,MAAM,MAAM,MAAM,MAAM,QAAQ,GAAG,CAAC,gBAAgB,GAAC,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,EAAE;QAC9E,MAAM;YAAE,YAAY;QAAG;QACvB,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAE3B","debugId":null}}]
}