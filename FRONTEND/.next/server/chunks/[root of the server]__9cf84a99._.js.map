{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/app/api/articles/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { NextRequest } from 'next/server';\r\n\r\nconst API_URL = 'http://localhost:3003/api/articles'; // URL de l'API backend\r\n\r\nexport async function GET(request : NextRequest,{ params }: { params: { id: number } }) {\r\n    const res = await fetch(`${API_URL}/${params.id}`, {\r\n      next: { revalidate: 10 } ,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const result = await res.json()\r\n    return NextResponse.json(result)\r\n  }\r\n\r\n// PUT : Mettre à jour un article\r\n// export async function PUT(request: Request) {\r\n//   try {\r\n//     const { id, ...body } = await request.json();\r\n//     const res = await fetch(`${API_URL}/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(body),\r\n//     });\r\n//     if (!res.ok) {\r\n//       throw new Error('Échec de la mise à jour de l\\'article');\r\n//     }\r\n//     const data = await res.json();\r\n//     return NextResponse.json(data);\r\n//   } catch (error) {\r\n//     return NextResponse.json(\r\n//       { message: 'Erreur lors de la mise à jour de l\\'article' },\r\n//       { status: 500 }\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nexport async function PUT(request: NextRequest,{ params }: { params: { id: number } }) {\r\n    const body = await request.json()\r\n    const res = await fetch(`${API_URL}/${params.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n    const data = await res.json();\r\n    return NextResponse.json(data)\r\n  \r\n  }\r\n// DELETE : Supprimer un article\r\nexport async function DELETE(request: Request) {\r\n  try {\r\n    const { id } = await request.json();\r\n    const res = await fetch(`${API_URL}/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (!res.ok) {\r\n      throw new Error('Échec de la suppression de l\\'article');\r\n    }\r\n    const data = await res.json();\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { message: 'Erreur lors de la suppression de l\\'article' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;;;AAAA;;AAGA,MAAM,UAAU,sCAAsC,uBAAuB;AAEtE,eAAe,IAAI,OAAqB,EAAC,EAAE,MAAM,EAA8B;IAClF,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;QACjD,MAAM;YAAE,YAAY;QAAG;QACvB,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,MAAM,SAAS,MAAM,IAAI,IAAI;IAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AA2BK,eAAe,IAAI,OAAoB,EAAC,EAAE,MAAM,EAA8B;IACjF,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;QACjD,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAE3B;AAEK,eAAe,OAAO,OAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;QACjC,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE;YAC1C,QAAQ;QACV;QACA,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA8C,GACzD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}