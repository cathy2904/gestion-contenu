{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/AIBTZ/app/articles/page.tsx"],"sourcesContent":["'use client';\r\n import { useState , useEffect} from 'react';\r\nimport Link from 'next/link';\r\n\r\ninterface Article {\r\n  _id: string;\r\n  title: string;\r\n  content: string;\r\n  author: string;\r\n}\r\n\r\ninterface ArticleTableProps {\r\n  articles: Article[];\r\n}\r\nexport default function ArticlesPage() {\r\n  const [articles, setArticles] = useState<any[]>([]);\r\n\r\n  // Charger les articles au montage du composant\r\n  useEffect(() => {\r\n    fetchArticles();\r\n  }, []);\r\n\r\n  // Fonction pour récupérer les articles\r\n  const fetchArticles = async () => {\r\n    const res = await fetch('/api/articles');\r\n    const data = await res.json();\r\n    setArticles(data);\r\n  };\r\n\r\nconst createArticle = async (article: { title: string; content: string; author: string }) => {\r\n  const res = await fetch('/api/articles', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(article),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nconst updateArticle = async (id: string, article: { title: string; content: string; author: string }) => {\r\n  const res = await fetch('/api/articles', {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ id, ...article }),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\nconst deleteArticle = async (id: string) => {\r\n  const res = await fetch('/api/articles', {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ id }),\r\n  });\r\n  const data = await res.json();\r\n  return data;\r\n};\r\n\r\n// export default function ArticleTable({ articles }: ArticleTableProps) {\r\n//   const handleDelete = async (id: string) => {\r\n//     const confirmDelete = confirm('Êtes-vous sûr de vouloir supprimer cet article ?');\r\n//     if (confirmDelete) {\r\n//       const res = await fetch(`http://localhost:3003/api/articles/${id}`, {\r\n//         method: 'DELETE',\r\n//       });\r\n//       if (res.ok) {\r\n//         alert('Article supprimé avec succès');\r\n//         window.location.reload(); // Recharger la page pour mettre à jour la liste\r\n//       }\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <table className=\"min-w-full bg-black border border-gray-300\">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"py-2 px-4 border-b\">Titre</th>\r\n          <th className=\"py-2 px-4 border-b\">Contenu</th>\r\n          <th className=\"py-2 px-4 border-b\">Auteur</th>\r\n          <th className=\"py-2 px-4 border-b\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {articles.map((article) => (\r\n          <tr key={article._id} className=\"hover:bg-gray-50\">\r\n            <td className=\"py-2 px-4 border-b\">{article.title}</td>\r\n            <td className=\"py-2 px-4 border-b\">{article.content}</td>\r\n            <td className=\"py-2 px-4 border-b\">{article.author}</td>\r\n            <td className=\"py-2 px-4 border-b\">\r\n              <Link\r\n                href={`/articles/edit/${article._id}`}\r\n                className=\"text-blue-500 hover:text-blue-700 mr-2\"\r\n              >\r\n                Modifier\r\n              </Link>\r\n              <button\r\n                onClick={() => handleDelete(article._id)}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n              >\r\n                Supprimer\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACC;AACD;;;AAFA;;;AAce,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAElD,+CAA+C;IAC/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG,EAAE;IAEL,uCAAuC;IACvC,MAAM,gBAAgB;QACpB,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,YAAY;IACd;IAEF,MAAM,gBAAgB,OAAO;QAC3B,MAAM,MAAM,MAAM,MAAM,iBAAiB;YACvC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO;IACT;IAEA,MAAM,gBAAgB,OAAO,IAAY;QACvC,MAAM,MAAM,MAAM,MAAM,iBAAiB;YACvC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAI,GAAG,OAAO;YAAC;QACxC;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO;IACT;IAEA,MAAM,gBAAgB,OAAO;QAC3B,MAAM,MAAM,MAAM,MAAM,iBAAiB;YACvC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAG;QAC5B;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO;IACT;IAEA,0EAA0E;IAC1E,iDAAiD;IACjD,yFAAyF;IACzF,2BAA2B;IAC3B,8EAA8E;IAC9E,4BAA4B;IAC5B,YAAY;IACZ,sBAAsB;IACtB,iDAAiD;IACjD,qFAAqF;IACrF,UAAU;IACV,QAAQ;IACR,OAAO;IAEL,qBACE,6LAAC;QAAM,WAAU;;0BACf,6LAAC;0BACC,cAAA,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;;;;;;;;;;;;0BAGvC,6LAAC;0BACE,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;wBAAqB,WAAU;;0CAC9B,6LAAC;gCAAG,WAAU;0CAAsB,QAAQ,KAAK;;;;;;0CACjD,6LAAC;gCAAG,WAAU;0CAAsB,QAAQ,OAAO;;;;;;0CACnD,6LAAC;gCAAG,WAAU;0CAAsB,QAAQ,MAAM;;;;;;0CAClD,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC,+HAAA,CAAA,UAAI;wCACH,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,EAAE;wCACrC,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,aAAa,QAAQ,GAAG;wCACvC,WAAU;kDACX;;;;;;;;;;;;;uBAdI,QAAQ,GAAG;;;;;;;;;;;;;;;;AAuB9B;GApGwB;KAAA"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}