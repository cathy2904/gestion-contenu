{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/post/service/api.ts"],"sourcesContent":["import axios from 'axios';\r\n//import { CreatePostData, Post, UpdatePostData } from '../../types/post';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3003/api',\r\n});\r\nexport const getPosts = () => api.get('/posts');\r\nexport const getPost = (id: string) => api.get(`/posts/${id}`);\r\nexport const createPost = (postData: FormData) => api.post('/posts', postData, {\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data',\r\n  },\r\n});\r\nexport const updatePost = (id: string, postData: FormData) =>\r\n    api.put(`/posts/${id}`, postData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        \r\n      },\r\n      method: 'PUT',\r\n      \r\n    });\r\n\r\n    \r\nexport const deletePost = (id: string) => api.delete(`/posts/${id}`);\r\n// export const getPosts = () => api.get('/posts');\r\n// export const getPost = (id: string) => api.get(`/posts/${id}`);\r\n// export const createPost = (postData: any) => api.post('/posts', postData);\r\n// export const updatePost = (id: string, postData: any) => api.put(`/posts/${id}`, postData);\r\n// export const deletePost = (id: string) => api.delete(`/posts/${id}`);"],"names":[],"mappings":";;;;;;;AAAA;;AACA,0EAA0E;AAE1E,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AACO,MAAM,WAAW,IAAM,IAAI,GAAG,CAAC;AAC/B,MAAM,UAAU,CAAC,KAAe,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI;AACtD,MAAM,aAAa,CAAC,WAAuB,IAAI,IAAI,CAAC,UAAU,UAAU;QAC7E,SAAS;YACP,gBAAgB;QAClB;IACF;AACO,MAAM,aAAa,CAAC,IAAY,WACnC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU;QAChC,SAAS;YACP,gBAAgB;QAElB;QACA,QAAQ;IAEV;AAGG,MAAM,aAAa,CAAC,KAAe,IAAI,MAAM,CAAC,CAAC,OAAO,EAAE,IAAI,GACnE,mDAAmD;CACnD,kEAAkE;CAClE,6EAA6E;CAC7E,8FAA8F;CAC9F,wEAAwE","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/post/edit/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter, useParams } from 'next/navigation';\nimport { useState, useEffect } from 'react';\nimport { getPost, updatePost } from '../../service/api';\nimport EditPostForm from '@/app/components/EditPostForm';\nimport Link from 'next/link';\n\nexport default function EditPostPage() {\n  const router = useRouter();\n  const { id } = useParams();\n  const postId = Array.isArray(id) ? id[0] : id;\n  // const [post, setPost] = useState<any>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n \n  const [post, setPost] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [imagePath, setImagePath] = useState<File | null>(null);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/posts/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setPost(data);\n        setTitle(data.title);\n        setContent(data.content);\n      });\n  }, [id]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    if (imagePath) formData.append(\"image\", imagePath);\n\n    const response = await fetch(`http://localhost:3000/posts/${id}`, {\n      method: \"PATCH\",\n      body: formData,\n    });\n\n    if (response.ok) {\n      router.push(\"/posts\");\n    } else {\n      console.error(\"Erreur lors de la mise à jour\");\n    }\n  };\n\n\n\n  const fetchPost = async () => {\n    if (!postId) return;\n    try {\n      setIsLoading(true);\n      const response = await getPost(postId);\n      setPost(response.data);\n    } catch (err) {\n      setError('Erreur lors du chargement du post');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onSubmit = async (formData: FormData) => {\n    try {\n      setIsSubmitting(true);\n      setError(null);\n      await updatePost(id as string, formData);\n      router.push('/post');\n    } catch (err) {\n      setError('Erreur lors de la mise à jour du post');\n      console.error(err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, [id]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <strong className=\"font-bold\">Erreur ! </strong>\n        <span className=\"block sm:inline\">{error}</span>\n      </div>\n    );\n  }\n\n  if (!post) {\n    return (\n      <div className=\"bg-white p-8 rounded-lg shadow text-center\">\n        <p className=\"text-gray-500\">Post non trouvé</p>\n        <Link \n          href=\"/posts\"\n          className=\"inline-block mt-4 text-blue-600 hover:text-blue-800\"\n        >\n          Retour à la liste\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-800\">Modifier le Post</h1>\n        <p className=\"text-gray-600 mt-2\">Modifiez les champs nécessaires</p>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\n          {error}\n        </div>\n      )}\n\n<form onSubmit={handleSubmit} className=\"flex flex-col gap-4 max-w-xl mx-auto\">\n      <h1 className=\"text-2xl font-bold\">Modifier un article</h1>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Titre\"\n        className=\"border p-2 rounded\"\n      />\n      <textarea\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        placeholder=\"Contenu\"\n        className=\"border p-2 rounded\"\n      />\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => setImagePath(e.target.files?.[0] || null)}\n        className=\"border p-2 rounded\"\n      />\n      <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded\">\n        Mettre à jour\n      </button>\n    </form>\n\n      {/* <EditPostForm onSubmit={onSubmit} initialData={post} isSubmitting={isSubmitting} /> */}\n    </div>\n  );\n}\n\n\n\n\n\n// import { useRouter } from 'next/router';\n// import { useState, useEffect } from 'react';\n// import { getPost, updatePost } from '../../service/api';\n// import PostForm from '@/app/components/PostForm';\n\n// export default function EditPostPage() {\n//   const router = useRouter();\n//   const { id } = router.query;\n//   const [post, setPost] = useState<any>(null);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [error, setError] = useState<string | null>(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const fetchPost = async () => {\n//     if (!id) return;\n//     try {\n//       setIsLoading(true);\n//       const response = await getPost(id as string);\n//       setPost(response.data);\n//     } catch (err) {\n//       setError('Erreur lors du chargement du post');\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const onSubmit = async (data: any) => {\n//     try {\n//       setIsSubmitting(true);\n//       setError(null);\n//       await updatePost(id as string, data);\n//       router.push('/posts');\n//     } catch (err) {\n//       setError('Erreur lors de la mise à jour du post');\n//       console.error(err);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPost();\n//   }, [id]);\n\n//   if (isLoading) return <div className=\"text-center py-8\">Chargement...</div>;\n//   if (error) return <div className=\"text-center py-8 text-red-500\">{error}</div>;\n//   if (!post) return <div className=\"text-center py-8\">Post non trouvé</div>;\n\n//   return (\n//     <div className=\"container mx-auto px-4 py-8\">\n//       <div className=\"flex items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold\">Modifier le Post</h1>\n//       </div>\n\n//       {error && (\n//         <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n//           {error}\n//         </div>\n//       )}\n\n//       <PostForm onSubmit={onSubmit} initialData={post} isSubmitting={isSubmitting} />\n//     </div>\n//   );\n// }\n// \"use client\"\n// import React, {useState,useEffect } from 'react'\n// import { useRouter } from 'next/navigation'\n// import { fetcher } from '@/app/libs'\n// import useSWR from 'swr'\n// export default function PostEdit({params} :{params:{id:number}}) {\n//   const router = useRouter()\n//   const {data : post,isLoading, error} = useSWR(`/api/posts/${params.id}`,fetcher)\n//   const [title, setTitle] =useState<string>('');\n//   const [body, setBody] = useState<string>('');\n//   useEffect(()=>{\n//      if(post){\n//          setTitle(post.result.title)\n//          setBody(post.result.content)\n//      }\n//   },[post, isLoading])\n//   const updatePost = async (e: any) => {\n//     e.preventDefault()\n//     if (title!=\"\" && body!=\"\") {\n//       const formData = {\n//           title: title,\n//           content: body\n//       }\n//       const res = await fetch(`/api/posts/${params.id}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(formData)\n//       });\n//       const content = await res.json();\n//       if(content.success>0)\n//       {\n//         router.push('/post');\n//       }\n      \n//     }\n//   };\n//   if(isLoading) return <div><span>Loading...</span></div>\n//   if (!post) return null;\n//   return (\n//     <form className='w-full' onSubmit={updatePost}>\n//         <span className='font-bold text-yellow-500 py-2 block underline text-2xl'>Form Add</span>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Title</label>\n//              <input type='text' name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' value={title} onChange={(e:any)=>setTitle(e.target.value)}/>\n//         </div>\n//         <div className='w-full py-2'>\n//              <label htmlFor=\"\" className='text-sm font-bold py-2 block'>Content</label>\n//              <textarea name='title' className='w-full border-[1px] border-gray-200 p-2 rounded-sm' value={body} onChange={(e:any)=>setBody(e.target.value)} />\n//         </div>\n//         <div className='w-full py-2'>\n//           <button className=\"w-20 p-2 text-white border-gray-200 border-[1px] rounded-sm bg-green-400\">Submit</button>\n//         </div>\n//     </form>\n//   )\n// }\n"],"names":[],"mappings":"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","debugId":null}}]
}