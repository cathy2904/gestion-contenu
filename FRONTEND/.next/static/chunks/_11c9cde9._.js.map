{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/ui/color-mode.tsx"],"sourcesContent":["\"use client\"\r\n\r\n// import type { IconButtonProps } from \"@chakra-ui/react\"\r\n// import { ClientOnly, IconButton, Skeleton } from \"@chakra-ui/react\"\r\nimport { ThemeProvider, useTheme } from \"next-themes\"\r\nimport type { ThemeProviderProps } from \"next-themes\"\r\nimport * as React from \"react\"\r\nimport { LuMoon, LuSun } from \"react-icons/lu\"\r\n\r\n\r\nexport function ColorModeProvider(props: ThemeProviderProps) {\r\n  return (\r\n    <ThemeProvider attribute=\"class\" disableTransitionOnChange {...props} />\r\n  )\r\n}\r\n\r\nexport function useColorMode() {\r\n  const { resolvedTheme, setTheme } = useTheme()\r\n  const toggleColorMode = () => {\r\n    setTheme(resolvedTheme === \"light\" ? \"dark\" : \"light\")\r\n  }\r\n  return {\r\n    colorMode: resolvedTheme,\r\n    setColorMode: setTheme,\r\n    toggleColorMode,\r\n  }\r\n}\r\n\r\nexport function useColorModeValue<T>(light: T, dark: T) {\r\n  const { colorMode } = useColorMode()\r\n  return colorMode === \"light\" ? light : dark\r\n}\r\n\r\nexport function ColorModeIcon() {\r\n  const { colorMode } = useColorMode()\r\n  return colorMode === \"light\" ? <LuSun /> : <LuMoon />\r\n}\r\n\r\n\r\n// export const ColorModeButton = React.forwardRef<\r\n//   HTMLButtonElement,\r\n//   ThemeProviderProps\r\n// >(function ColorModeButton(props, ref) {\r\n//   const { toggleColorMode } = useColorMode()\r\n//   return (\r\n//     <ClientOnly fallback={<Skeleton boxSize=\"8\" />}>\r\n//       <IconButton\r\n//         onClick={toggleColorMode}\r\n//         variant=\"ghost\"\r\n//         aria-label=\"Toggle color mode\"\r\n//         size=\"sm\"\r\n//         ref={ref}\r\n//         {...props}\r\n//         css={{\r\n//           _icon: {\r\n//             width: \"5\",\r\n//             height: \"5\",\r\n//           },\r\n//         }}\r\n//       >\r\n//         <ColorModeIcon />\r\n//       </IconButton>\r\n//     </ClientOnly>\r\n//   )\r\n// })\r\n"],"names":[],"mappings":";;;;;;;AAEA,0DAA0D;AAC1D,sEAAsE;AACtE;AAGA;;;AAPA;;;AAUO,SAAS,kBAAkB,KAAyB;IACzD,qBACE,6LAAC,mJAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;QAAE,GAAG,KAAK;;;;;;AAExE;KAJgB;AAMT,SAAS;;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,kBAAkB;QACtB,SAAS,kBAAkB,UAAU,SAAS;IAChD;IACA,OAAO;QACL,WAAW;QACX,cAAc;QACd;IACF;AACF;GAVgB;;QACsB,mJAAA,CAAA,WAAQ;;;AAWvC,SAAS,kBAAqB,KAAQ,EAAE,IAAO;;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,UAAU,QAAQ;AACzC;IAHgB;;QACQ;;;AAIjB,SAAS;;IACd,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,wBAAU,6LAAC,iJAAA,CAAA,QAAK;;;;6BAAM,6LAAC,iJAAA,CAAA,SAAM;;;;;AACpD,EAGA,mDAAmD;CACnD,uBAAuB;CACvB,uBAAuB;CACvB,2CAA2C;CAC3C,+CAA+C;CAC/C,aAAa;CACb,uDAAuD;CACvD,oBAAoB;CACpB,oCAAoC;CACpC,0BAA0B;CAC1B,yCAAyC;CACzC,oBAAoB;CACpB,oBAAoB;CACpB,qBAAqB;CACrB,iBAAiB;CACjB,qBAAqB;CACrB,0BAA0B;CAC1B,2BAA2B;CAC3B,eAAe;CACf,aAAa;CACb,UAAU;CACV,4BAA4B;CAC5B,sBAAsB;CACtB,oBAAoB;CACpB,MAAM;CACN,KAAK;IA/BW;;QACQ;;;MADR","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/components/ui/provider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { ChakraProvider, defaultSystem } from \"@chakra-ui/react\"\r\nimport type { ThemeProviderProps } from \"next-themes\"\r\nimport {\r\n  ColorModeProvider,\r\n  // type ColorModeProviderProps,\r\n} from \"./color-mode\"\r\n\r\nexport function Provider(props: ThemeProviderProps) {\r\n  return (\r\n    <ChakraProvider value={defaultSystem}>\r\n      <ColorModeProvider {...props} />\r\n    </ChakraProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAEA;AAJA;;;;AASO,SAAS,SAAS,KAAyB;IAChD,qBACE,6LAAC,yLAAA,CAAA,iBAAc;QAAC,OAAO,mKAAA,CAAA,gBAAa;kBAClC,cAAA,6LAAC,qIAAA,CAAA,oBAAiB;YAAE,GAAG,KAAK;;;;;;;;;;;AAGlC;KANgB","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/contexts/authProvider.tsx"],"sourcesContent":["'use client';\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { setCookie, deleteCookie } from 'cookies-next';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [mounted, setMounted] = useState(false); // ← ajout\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:3003/api/users/profile', {\r\n          credentials: 'include'\r\n        });\r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          setUser(data);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n        setMounted(true); // ← on indique que le montage est terminé\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const res = await fetch('http://localhost:3003/api/auth/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email: email.trim(), password }),\r\n      credentials: 'include'\r\n    });\r\n    if (!res.ok) throw new Error('Login failed');\r\n\r\n    const data = await res.json();\r\n    console.log('Login response:', data);\r\n\r\n    setUser({\r\n      id: data.user.id,\r\n      username: data.user.username,\r\n      email: data.user.email\r\n    });\r\n\r\n    router.push('/');\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    const res = await fetch('http://localhost:3003/api/auth/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, email, password }),\r\n      credentials: 'include'\r\n    });\r\n    if (!res.ok) throw new Error('Registration failed');\r\n    await login(email, password);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch('http://localhost:3003/api/auth/logout', {\r\n      method: 'POST',\r\n      credentials: 'include'\r\n    });\r\n    deleteCookie('token');\r\n    setUser(null);\r\n    router.push('/auth/login');\r\n  };\r\n\r\n  if (!mounted) return null; // ← on attend que le client monte avant de rendre quoi que ce soit\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth doit être utilisé à l’intérieur de AuthProvider');\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;AAHA;;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA0B;AAEnD,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,UAAU;IACzD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;oDAAY;oBAChB,IAAI;wBACF,MAAM,MAAM,MAAM,MAAM,2CAA2C;4BACjE,aAAa;wBACf;wBACA,IAAI,IAAI,EAAE,EAAE;4BACV,MAAM,OAAO,MAAM,IAAI,IAAI;4BAC3B,QAAQ;wBACV;oBACF,SAAU;wBACR,WAAW;wBACX,WAAW,OAAO,0CAA0C;oBAC9D;gBACF;;YACA;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,MAAM,MAAM,MAAM,MAAM,wCAAwC;YAC9D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE,OAAO,MAAM,IAAI;gBAAI;YAAS;YACrD,aAAa;QACf;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAE7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ,GAAG,CAAC,mBAAmB;QAE/B,QAAQ;YACN,IAAI,KAAK,IAAI,CAAC,EAAE;YAChB,UAAU,KAAK,IAAI,CAAC,QAAQ;YAC5B,OAAO,KAAK,IAAI,CAAC,KAAK;QACxB;QAEA,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,MAAM,MAAM,MAAM,MAAM,2CAA2C;YACjE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;gBAAO;YAAS;YACjD,aAAa;QACf;QACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,MAAM,OAAO;IACrB;IAEA,MAAM,SAAS;QACb,MAAM,MAAM,yCAAyC;YACnD,QAAQ;YACR,aAAa;QACf;QACA,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE;QACb,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,CAAC,SAAS,OAAO,MAAM,mEAAmE;IAE9F,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;YAAU;QAAO;kBACnE;;;;;;AAGP;GAzEgB;;QAIC,qIAAA,CAAA,YAAS;;;KAJV;AA2ET,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;IAJa","debugId":null}}]
}