{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/content/api/route.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const generateContent = async (data: {\r\n  title: string;\r\n  style: string;\r\n  length: string;\r\n  provider: string;\r\n}) => {\r\n  const res = await axios.post('http://localhost:3003/api/content/generate', data);\r\n  return res.data;\r\n};\r\n\r\nexport const saveContent = async (data: {\r\n  title: string;\r\n  content: string;\r\n  style: string;\r\n  length: string;\r\n  provider: string;\r\n}) => {\r\n  const res = await axios.post('/api/save', data);\r\n  return res.data;\r\n};\r\n\r\nexport const fetchContents = async () => {\r\n  const res = await axios.get('/api/contents');\r\n  return res.data;\r\n};\r\n\r\n\r\n// import axios from 'axios';\r\n// import { Content, ContentFormData, GenerateContentData } from '../types/content';\r\n\r\n// const API_URL = process.env.NEXT_API_URL || 'http://localhost:3000';\r\n\r\n// const api = axios.create({\r\n//   baseURL: API_URL,\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//   },\r\n// });\r\n\r\n// // export const getContents = async (): Promise<Content[]> => {\r\n// //   const response = await api.get('/content');\r\n// //   return response.data;\r\n// // };\r\n// export const fetchContents = async (): Promise<Content[]> => {\r\n//     const response = await axios.get(`${API_URL}/content`);\r\n//     return response.data;\r\n//   };\r\n\r\n// export const getContent = async (id: string): Promise<Content> => {\r\n//   const response = await api.get(`/content/${id}`);\r\n//   return response.data;\r\n// };\r\n\r\n// export const createContent = async (contentData: ContentFormData): Promise<Content> => {\r\n//   const response = await api.post('/content', contentData);\r\n//   return response.data;\r\n// };\r\n\r\n// export const fetchContentById = async (id: string): Promise<Content> => {\r\n//     const response = await axios.get(`${API_URL}/content/${id}`);\r\n//     return response.data;\r\n//   };\r\n\r\n// export const generateContentOnly = async (generateData: GenerateContentData): Promise<string> => {\r\n//   const response = await api.post('/content/generate', generateData);\r\n//   return response.data.content;\r\n// };\r\n\r\n// export const deleteContent = async (id: string): Promise<void> => {\r\n//   await api.delete(`/content/${id}`);\r\n// };\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n// import { Content } from '../types/content';\r\n\r\n// const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000';\r\n\r\n// export const fetchContents = async (): Promise<Content[]> => {\r\n//   const response = await axios.get(`${API_BASE_URL}/content`);\r\n//   return response.data;\r\n// };\r\n\r\n// export const fetchContentById = async (id: string): Promise<Content> => {\r\n//   const response = await axios.get(`${API_BASE_URL}/content/${id}`);\r\n//   return response.data;\r\n// };\r\n\r\n// export const createContent = async (contentData: Partial<Content>): Promise<Content> => {\r\n//   const response = await axios.post(`${API_BASE_URL}/content`, contentData);\r\n//   return response.data;\r\n// };\r\n\r\n// export const updateContent = async (id: string, contentData: Partial<Content>): Promise<Content> => {\r\n//   const response = await axios.put(`${API_BASE_URL}/content/${id}`, contentData);\r\n//   return response.data;\r\n// };\r\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,kBAAkB,OAAO;IAMpC,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,8CAA8C;IAC3E,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,cAAc,OAAO;IAOhC,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,aAAa;IAC1C,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,gBAAgB;IAC3B,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IAC5B,OAAO,IAAI,IAAI;AACjB,GAGA,6BAA6B;CAC7B,oFAAoF;CAEpF,uEAAuE;CAEvE,6BAA6B;CAC7B,sBAAsB;CACtB,eAAe;CACf,0CAA0C;CAC1C,OAAO;CACP,MAAM;CAEN,kEAAkE;CAClE,mDAAmD;CACnD,6BAA6B;CAC7B,QAAQ;CACR,iEAAiE;CACjE,8DAA8D;CAC9D,4BAA4B;CAC5B,OAAO;CAEP,sEAAsE;CACtE,sDAAsD;CACtD,0BAA0B;CAC1B,KAAK;CAEL,2FAA2F;CAC3F,8DAA8D;CAC9D,0BAA0B;CAC1B,KAAK;CAEL,4EAA4E;CAC5E,oEAAoE;CACpE,4BAA4B;CAC5B,OAAO;CAEP,qGAAqG;CACrG,wEAAwE;CACxE,kCAAkC;CAClC,KAAK;CAEL,sEAAsE;CACtE,wCAAwC;CACxC,KAAK;CAIL,6BAA6B;CAC7B,8CAA8C;CAE9C,mFAAmF;CAEnF,iEAAiE;CACjE,iEAAiE;CACjE,0BAA0B;CAC1B,KAAK;CAEL,4EAA4E;CAC5E,uEAAuE;CACvE,0BAA0B;CAC1B,KAAK;CAEL,4FAA4F;CAC5F,+EAA+E;CAC/E,0BAA0B;CAC1B,KAAK;CAEL,wGAAwG;CACxG,oFAAoF;CACpF,0BAA0B;CAC1B,KAAK","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/content/create/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport {\r\n  generateContent,\r\n  saveContent,\r\n  fetchContents,\r\n} from '../api/route';\r\n\r\nexport default function GeneratePage() {\r\n  const [title, setTitle] = useState('');\r\n  const [style, setStyle] = useState('neutre');\r\n  const [length, setLength] = useState('court');\r\n  const [provider, setProvider] = useState('deepseek');\r\n  const [content, setContent] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [savedContents, setSavedContents] = useState<any[]>([]);\r\n\r\n  const generate = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await generateContent({ title, style, length, provider });\r\n      setContent(res.content);\r\n    } catch {\r\n      alert('Erreur lors de la génération');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await saveContent({\r\n        title,\r\n        content: content,\r\n        style: style,\r\n        length,\r\n        provider: provider,\r\n      });\r\n      alert('content enregistré avec succès');\r\n      loadSavedContents();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Erreur enregistrement');\r\n    }\r\n  };\r\n\r\n  const loadSavedContents = async () => {\r\n    try {\r\n      const data = await fetchContents();\r\n      setSavedContents(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 max-w-5xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Générer un conten</h1>\r\n\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Titre\"\r\n        className=\"w-full border p-2 mb-4 rounded\"\r\n      />\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n        \r\n        <select\r\n          value={style}\r\n          onChange={(e) => setStyle(e.target.value)}\r\n          className=\" shadow appearance-none border p-2 rounded leading-tight focus:outline-none focus:shadow-outline\"\r\n        >\r\n           <option value=\"\">Standard</option>\r\n            <option value=\"formal\">Formel</option>\r\n            <option value=\"casual\">Décontracté</option>\r\n            <option value=\"professional\">Professionnel</option>\r\n            <option value=\"academic\">Académique</option>\r\n            <option value=\"creative\">Créatif</option>\r\n            <option value=\"persuasive\">Persuasif</option>\r\n            <option value=\"informative\">Informatif</option>\r\n        </select>\r\n\r\n        <select\r\n          value={length}\r\n          onChange={(e) => setLength(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        >\r\n          <option value=\"court\">Court</option>\r\n          <option value=\"moyen\">Moyen</option>\r\n          <option value=\"long\">Long</option>\r\n        </select>\r\n\r\n        <select\r\n          value={provider}\r\n          onChange={(e) => setProvider(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        >\r\n          <option value=\"deepseek\">DeepSeek</option>\r\n          <option value=\"gpt-4\">GPT-4</option>\r\n          <option value=\"mistral\">Mistral</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"flex gap-4 mb-6\">\r\n        <button\r\n          onClick={generate}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n        >\r\n          {loading ? 'Génération...' : 'Générer'}\r\n        </button>\r\n        <button\r\n          onClick={handleSave}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n        >\r\n          Enregistrer\r\n        </button>\r\n        <button\r\n          onClick={loadSavedContents}\r\n          className=\"bg-gray-600 text-white px-4 py-2 rounded\"\r\n        >\r\n          Voir les contens enregistrés\r\n        </button>\r\n      </div>\r\n\r\n      {content && (\r\n        <div className=\"bg-gray-100 p-4 rounded mb-6\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">{title}</h2>\r\n          <p className=\"whitespace-pre-line\">{content}</p>\r\n        </div>\r\n      )}\r\n\r\n      {savedContents.length > 0 && (\r\n        <div className=\"mt-10\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">contenus enregistrés</h2>\r\n          <div className=\"space-y-4\">\r\n            {savedContents.map((art) => (\r\n              <div\r\n                key={art._id}\r\n                className=\"border p-4 rounded bg-white shadow\"\r\n              >\r\n                <h3 className=\"text-lg font-semibold\">{art.title}</h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Style : {art.style} | Longueur : {art.length} | Provider :{' '}\r\n                  {art.provider}\r\n                </p>\r\n                <p className=\"mt-2 whitespace-pre-line\">{art.content}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useState } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n// export default function CreateContentPage() {\r\n//   const router = useRouter();\r\n\r\n//   const [form, setForm] = useState({\r\n//     title: \"\",\r\n//     style: \"neutre\",\r\n//     length: \"court\",\r\n//     provider: \"gpt\",\r\n//     content: \"\",\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [saving, setSaving] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleGenerate = async () => {\r\n//     setLoading(true);\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:3003/api/content/generate\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({\r\n//           title: form.title,\r\n//           style: form.style,\r\n//           length: form.length,\r\n//           provider: form.provider,\r\n//         }),\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const message = await res.text();\r\n//         throw new Error(message);\r\n//       }\r\n\r\n//       const data = await res.json();\r\n//       setForm({ ...form, content: data.content });\r\n//     } catch (err: any) {\r\n//       setError(err.message || \"Erreur lors de la génération.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSave = async () => {\r\n//     if (!form.content) return;\r\n\r\n//     setSaving(true);\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:3003/api/content\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(form),\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const message = await res.text();\r\n//         throw new Error(message);\r\n//       }\r\n\r\n//       router.push(\"/content\");\r\n//     } catch (err: any) {\r\n//       setError(err.message || \"Erreur lors de l'enregistrement.\");\r\n//     } finally {\r\n//       setSaving(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-3xl mx-auto py-10 px-4\">\r\n//       <h1 className=\"text-2xl font-bold mb-6\">Créer un nouveau contenu</h1>\r\n\r\n//       {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n//       <div className=\"mb-4\">\r\n//         <label className=\"block font-medium\">Titre</label>\r\n//         <input\r\n//           name=\"title\"\r\n//           type=\"text\"\r\n//           value={form.title}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border p-2 rounded\"\r\n//           required\r\n//         />\r\n//       </div>\r\n\r\n//       <div className=\"mb-4 grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n//         <div>\r\n//           <label className=\"block font-medium\">Style</label>\r\n//           <select\r\n//             name=\"style\"\r\n//             value={form.style}\r\n//             onChange={handleChange}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"neutre\">Neutre</option>\r\n//             <option value=\"persuasif\">Persuasif</option>\r\n//             <option value=\"informatif\">Informatif</option>\r\n//             <option value=\"humoristique\">Humoristique</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-medium\">Longueur</label>\r\n//           <select\r\n//             name=\"length\"\r\n//             value={form.length}\r\n//             onChange={handleChange}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"court\">Court</option>\r\n//             <option value=\"moyen\">Moyen</option>\r\n//             <option value=\"long\">Long</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block font-medium\">Fournisseur IA</label>\r\n//           <select\r\n//             name=\"provider\"\r\n//             value={form.provider}\r\n//             onChange={handleChange}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"gpt\">GPT</option>\r\n//             <option value=\"deepseek\">DeepSeek</option>\r\n//             <option value=\"claude\">Claude</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <button\r\n//         onClick={handleGenerate}\r\n//         disabled={loading || !form.title}\r\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n//       >\r\n//         {loading ? \"Génération...\" : \"Générer le contenu\"}\r\n//       </button>\r\n\r\n//       {form.content && (\r\n//         <>\r\n//           <div className=\"mt-6\">\r\n//             <label className=\"block font-medium mb-2\">Contenu généré</label>\r\n//             <textarea\r\n//               value={form.content}\r\n//               readOnly\r\n//               rows={10}\r\n//               className=\"w-full border p-2 rounded\"\r\n//             />\r\n//           </div>\r\n\r\n//           <button\r\n//             onClick={handleSave}\r\n//             disabled={saving}\r\n//             className=\"mt-4 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 disabled:opacity-50\"\r\n//           >\r\n//             {saving ? \"Enregistrement...\" : \"Enregistrer dans la base\"}\r\n//           </button>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// 'use client';\r\n\r\n// import { useState } from 'react';\r\n// import { useRouter } from 'next/navigation';\r\n// import LoadingSpinner from '@/app/components/LoadingSpinner';\r\n\r\n// export default function CreateContentPage() {\r\n//   const router = useRouter();\r\n//   const [title, setTitle] = useState('');\r\n//   const [style, setStyle] = useState('professional');\r\n//   const [length, setLength] = useState('500'); // par défaut 500 mots\r\n//   const [provider, setProvider] = useState('OPENAI');\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleGenerate = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError('');\r\n\r\n//     try {\r\n//       const res = await fetch('http://localhost:3003/api/content/generate', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({\r\n//           title,\r\n//           style,\r\n//           length: Number(length), // conversion explicite\r\n//           provider: provider,\r\n//         }),\r\n//       });\r\n\r\n//       if (!res.ok) {\r\n//         const errorText = await res.text();\r\n//         throw new Error(errorText || 'Erreur lors de la génération du contenu');\r\n//       }\r\n\r\n//       const saved = await res.json();\r\n//       router.push(`/content/read/${saved._id}`);\r\n//     } catch (err: any) {\r\n//       setError(err.message || 'Erreur inconnue');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-2xl mx-auto p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Créer un contenu</h1>\r\n//       <form onSubmit={handleGenerate} className=\"space-y-4\">\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Titre</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             required\r\n//             className=\"w-full border p-2 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Style</label>\r\n//           <select\r\n//             value={style}\r\n//             onChange={(e) => setStyle(e.target.value)}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//              <option value=\"\">Standard</option>\r\n//             <option value=\"formal\">Formel</option>\r\n//             <option value=\"casual\">Décontracté</option>\r\n//             <option value=\"professional\">Professionnel</option>\r\n//             <option value=\"academic\">Académique</option>\r\n//             <option value=\"creative\">Créatif</option>\r\n//             <option value=\"persuasive\">Persuasif</option>\r\n//             <option value=\"informative\">Informatif</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Longueur (en mots)</label>\r\n//           <select\r\n//             value={length}\r\n//             onChange={(e) => setLength(e.target.value)}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"300\">300 mots</option>\r\n//             <option value=\"500\">500 mots</option>\r\n//             <option value=\"800\">800 mots</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium\">Modèle IA</label>\r\n//           <select\r\n//             value={provider}\r\n//             onChange={(e) => setProvider(e.target.value)}\r\n//             className=\"w-full border p-2 rounded\"\r\n//           >\r\n//             <option value=\"OPENAI\">OpenAI</option>\r\n//             <option value=\"DEEPSEEK\">DeepSeek</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={loading}\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n//         >\r\n//           {loading ? <LoadingSpinner /> : 'Générer le contenu'}\r\n//         </button>\r\n\r\n//         {error && <p className=\"text-red-500\">❌ {error}</p>}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"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","debugId":null}}]
}