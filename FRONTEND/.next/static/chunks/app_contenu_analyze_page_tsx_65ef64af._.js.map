{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/komba/Gestion-contenu/FRONTEND/app/contenu/analyze/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function AnalyzePage() {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [summary, setSummary] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!file) return;\r\n\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:3003/api/analyze',\r\n        formData,\r\n        {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        }\r\n      );\r\n      setSummary(response.data.summary);\r\n    } catch (error) {\r\n      console.error('Erreur:', error);\r\n      alert('Échec de l\\'analyse');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h1>Analyse de documents</h1>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".txt,.pdf,.docx\"\r\n        onChange={handleFileChange}\r\n        style={{ margin: '1rem 0' }}\r\n      />\r\n      <button \r\n        onClick={handleSubmit} \r\n        disabled={isLoading}\r\n        style={{ padding: '0.5rem 1rem' }}\r\n      >\r\n        {isLoading ? 'Analyse en cours...' : 'Analyser'}\r\n      </button>\r\n      {summary && (\r\n        <div style={{ marginTop: '2rem' }}>\r\n          <h2>Résumé</h2>\r\n          <p style={{ whiteSpace: 'pre-line' }}>{summary}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import UploadAndAnalyze from '@/components/UploadAndAnalyze';\r\n\r\n// export default function Home() {\r\n//   return (\r\n//     <div>\r\n//       <UploadAndAnalyze />\r\n//     </div>\r\n//   );\r\n// }"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,mBAAmB,CAAC;QACxB,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;IAC/C;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,MAAM;QAEX,aAAa;QACb,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,qCACA,UACA;gBACE,SAAS;oBAAE,gBAAgB;gBAAsB;YACnD;YAEF,WAAW,SAAS,IAAI,CAAC,OAAO;QAClC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,WAAW;YACzB,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,OAAO;YAAE,SAAS;QAAO;;0BAC5B,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBACC,MAAK;gBACL,QAAO;gBACP,UAAU;gBACV,OAAO;oBAAE,QAAQ;gBAAS;;;;;;0BAE5B,6LAAC;gBACC,SAAS;gBACT,UAAU;gBACV,OAAO;oBAAE,SAAS;gBAAc;0BAE/B,YAAY,wBAAwB;;;;;;YAEtC,yBACC,6LAAC;gBAAI,OAAO;oBAAE,WAAW;gBAAO;;kCAC9B,6LAAC;kCAAG;;;;;;kCACJ,6LAAC;wBAAE,OAAO;4BAAE,YAAY;wBAAW;kCAAI;;;;;;;;;;;;;;;;;;AAKjD,EAYA,gEAAgE;CAEhE,mCAAmC;CACnC,aAAa;CACb,YAAY;CACZ,6BAA6B;CAC7B,aAAa;CACb,OAAO;CACP,IAAI;GA7EoB;KAAA","debugId":null}}]
}